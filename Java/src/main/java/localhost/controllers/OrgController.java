/*
 * ThoughtSpotPublicRESTAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package localhost.controllers;

import com.fasterxml.jackson.core.JsonProcessingException;
import io.apimatic.core.ApiCall;
import io.apimatic.core.ErrorCase;
import io.apimatic.core.GlobalConfiguration;
import io.apimatic.coreinterfaces.http.request.ArraySerializationFormat;
import java.io.IOException;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import java.util.concurrent.CompletionException;
import localhost.ApiHelper;
import localhost.Server;
import localhost.exceptions.ApiException;
import localhost.exceptions.ErrorResponseException;
import localhost.http.request.HttpMethod;
import localhost.models.OrgsResponse;
import localhost.models.TspublicRestV2OrgCreateRequest;
import localhost.models.TspublicRestV2OrgSearchRequest;
import localhost.models.TspublicRestV2OrgUpdateRequest;

/**
 * This class lists all the endpoints of the groups.
 */
public final class OrgController extends BaseController {

    /**
     * Initializes the controller.
     * @param globalConfig    Configurations added in client.
     */
    public OrgController(GlobalConfiguration globalConfig) {
        super(globalConfig);
    }

    /**
     * To get the details of a specific organization by name or id, use this endpoint. At least one
     * value needed. When both are given,then id will be considered to fetch organization
     * information. Requires Administration privilege for tenant.
     * @param  name  Optional parameter: Name of the organization.
     * @param  id  Optional parameter: The ID of the organization.
     * @return    Returns the OrgsResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public OrgsResponse restapiV2GetOrg(
            final String name,
            final Integer id) throws ApiException, IOException {
        return prepareRestapiV2GetOrgRequest(name, id).execute();
    }

    /**
     * To get the details of a specific organization by name or id, use this endpoint. At least one
     * value needed. When both are given,then id will be considered to fetch organization
     * information. Requires Administration privilege for tenant.
     * @param  name  Optional parameter: Name of the organization.
     * @param  id  Optional parameter: The ID of the organization.
     * @return    Returns the OrgsResponse response from the API call
     */
    public CompletableFuture<OrgsResponse> restapiV2GetOrgAsync(
            final String name,
            final Integer id) {
        try { 
            return prepareRestapiV2GetOrgRequest(name, id).executeAsync(); 
        } catch (Exception e) {  
            throw new CompletionException(e); 
        }
    }

    /**
     * Builds the ApiCall object for restapiV2GetOrg.
     */
    private ApiCall<OrgsResponse, ApiException> prepareRestapiV2GetOrgRequest(
            final String name,
            final Integer id) throws IOException {
        return new ApiCall.Builder<OrgsResponse, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.ENUM_DEFAULT.value())
                        .path("/tspublic/rest/v2/org")
                        .queryParam(param -> param.key("name")
                                .value(name).isRequired(false))
                        .queryParam(param -> param.key("id")
                                .value(id).isRequired(false))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .authenticationKey(BaseController.AUTHENTICATION_KEY)
                        .httpMethod(HttpMethod.GET))
                .responseHandler(responseHandler -> responseHandler
                        .deserializer(
                                response -> ApiHelper.deserialize(response, OrgsResponse.class))
                        .nullify404(false)
                        .localErrorCase("500",
                                 ErrorCase.create("Operation failed",
                                (reason, context) -> new ErrorResponseException(reason, context)))
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .endpointConfiguration(param -> param
                                .arraySerializationFormat(ArraySerializationFormat.PLAIN
))
                .build();
    }

    /**
     * To programmatically create an organization in the ThoughtSpot system, use this API endpoint.
     * Requires Administration privilege for tenant.
     * @param  body  Required parameter: Example:
     * @return    Returns the OrgsResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public OrgsResponse restapiV2CreateOrg(
            final TspublicRestV2OrgCreateRequest body) throws ApiException, IOException {
        return prepareRestapiV2CreateOrgRequest(body).execute();
    }

    /**
     * To programmatically create an organization in the ThoughtSpot system, use this API endpoint.
     * Requires Administration privilege for tenant.
     * @param  body  Required parameter: Example:
     * @return    Returns the OrgsResponse response from the API call
     */
    public CompletableFuture<OrgsResponse> restapiV2CreateOrgAsync(
            final TspublicRestV2OrgCreateRequest body) {
        try { 
            return prepareRestapiV2CreateOrgRequest(body).executeAsync(); 
        } catch (Exception e) {  
            throw new CompletionException(e); 
        }
    }

    /**
     * Builds the ApiCall object for restapiV2CreateOrg.
     */
    private ApiCall<OrgsResponse, ApiException> prepareRestapiV2CreateOrgRequest(
            final TspublicRestV2OrgCreateRequest body) throws JsonProcessingException, IOException {
        return new ApiCall.Builder<OrgsResponse, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.ENUM_DEFAULT.value())
                        .path("/tspublic/rest/v2/org/create")
                        .bodyParam(param -> param.value(body))
                        .bodySerializer(() ->  ApiHelper.serialize(body))
                        .headerParam(param -> param.key("Content-Type")
                                .value("application/json").isRequired(false))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .authenticationKey(BaseController.AUTHENTICATION_KEY)
                        .httpMethod(HttpMethod.POST))
                .responseHandler(responseHandler -> responseHandler
                        .deserializer(
                                response -> ApiHelper.deserialize(response, OrgsResponse.class))
                        .nullify404(false)
                        .localErrorCase("500",
                                 ErrorCase.create("Operation failed",
                                (reason, context) -> new ErrorResponseException(reason, context)))
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .endpointConfiguration(param -> param
                                .arraySerializationFormat(ArraySerializationFormat.PLAIN
))
                .build();
    }

    /**
     * You can use this endpoint to programmatically modify an existing org. Provide name or id of
     * the organization to update the properties. When both id and name are given, then id will be
     * considered and name of the organization will be updated. Requires Administration privilege
     * for tenant.
     * @param  body  Required parameter: Example:
     * @return    Returns the OrgsResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public OrgsResponse restapiV2UpdateOrg(
            final TspublicRestV2OrgUpdateRequest body) throws ApiException, IOException {
        return prepareRestapiV2UpdateOrgRequest(body).execute();
    }

    /**
     * You can use this endpoint to programmatically modify an existing org. Provide name or id of
     * the organization to update the properties. When both id and name are given, then id will be
     * considered and name of the organization will be updated. Requires Administration privilege
     * for tenant.
     * @param  body  Required parameter: Example:
     * @return    Returns the OrgsResponse response from the API call
     */
    public CompletableFuture<OrgsResponse> restapiV2UpdateOrgAsync(
            final TspublicRestV2OrgUpdateRequest body) {
        try { 
            return prepareRestapiV2UpdateOrgRequest(body).executeAsync(); 
        } catch (Exception e) {  
            throw new CompletionException(e); 
        }
    }

    /**
     * Builds the ApiCall object for restapiV2UpdateOrg.
     */
    private ApiCall<OrgsResponse, ApiException> prepareRestapiV2UpdateOrgRequest(
            final TspublicRestV2OrgUpdateRequest body) throws JsonProcessingException, IOException {
        return new ApiCall.Builder<OrgsResponse, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.ENUM_DEFAULT.value())
                        .path("/tspublic/rest/v2/org/update")
                        .bodyParam(param -> param.value(body))
                        .bodySerializer(() ->  ApiHelper.serialize(body))
                        .headerParam(param -> param.key("Content-Type")
                                .value("application/json").isRequired(false))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .authenticationKey(BaseController.AUTHENTICATION_KEY)
                        .httpMethod(HttpMethod.PUT))
                .responseHandler(responseHandler -> responseHandler
                        .deserializer(
                                response -> ApiHelper.deserialize(response, OrgsResponse.class))
                        .nullify404(false)
                        .localErrorCase("500",
                                 ErrorCase.create("Operation failed",
                                (reason, context) -> new ErrorResponseException(reason, context)))
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .endpointConfiguration(param -> param
                                .arraySerializationFormat(ArraySerializationFormat.PLAIN
))
                .build();
    }

    /**
     * To remove an organization from the ThoughtSpot system, send a DELETE request to this
     * endpoint. At least one value is needed. When both id and name are given, then id will be
     * considered. Requires Administration privilege for tenant.
     * @param  name  Optional parameter: Name of the organization.
     * @param  id  Optional parameter: The ID of the organization.
     * @return    Returns the Boolean response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public Boolean restapiV2DeleteOrg(
            final String name,
            final Integer id) throws ApiException, IOException {
        return prepareRestapiV2DeleteOrgRequest(name, id).execute();
    }

    /**
     * To remove an organization from the ThoughtSpot system, send a DELETE request to this
     * endpoint. At least one value is needed. When both id and name are given, then id will be
     * considered. Requires Administration privilege for tenant.
     * @param  name  Optional parameter: Name of the organization.
     * @param  id  Optional parameter: The ID of the organization.
     * @return    Returns the Boolean response from the API call
     */
    public CompletableFuture<Boolean> restapiV2DeleteOrgAsync(
            final String name,
            final Integer id) {
        try { 
            return prepareRestapiV2DeleteOrgRequest(name, id).executeAsync(); 
        } catch (Exception e) {  
            throw new CompletionException(e); 
        }
    }

    /**
     * Builds the ApiCall object for restapiV2DeleteOrg.
     */
    private ApiCall<Boolean, ApiException> prepareRestapiV2DeleteOrgRequest(
            final String name,
            final Integer id) throws IOException {
        return new ApiCall.Builder<Boolean, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.ENUM_DEFAULT.value())
                        .path("/tspublic/rest/v2/org/delete")
                        .queryParam(param -> param.key("name")
                                .value(name).isRequired(false))
                        .queryParam(param -> param.key("id")
                                .value(id).isRequired(false))
                        .authenticationKey(BaseController.AUTHENTICATION_KEY)
                        .httpMethod(HttpMethod.DELETE))
                .responseHandler(responseHandler -> responseHandler
                        .deserializer(
                                response -> Boolean.parseBoolean(response))
                        .nullify404(false)
                        .localErrorCase("500",
                                 ErrorCase.create("Operation failed",
                                (reason, context) -> new ErrorResponseException(reason, context)))
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .endpointConfiguration(param -> param
                                .arraySerializationFormat(ArraySerializationFormat.PLAIN
))
                .build();
    }

    /**
     * To get the details of a specific organization or all organizations in the ThoughtSpot system
     * use this end point. If no input is provided, then all organizations are included in the
     * response. Requires Administration privilege for tenant.
     * @param  body  Required parameter: Example:
     * @return    Returns the List of OrgsResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public List<OrgsResponse> restapiV2SearchOrgs(
            final TspublicRestV2OrgSearchRequest body) throws ApiException, IOException {
        return prepareRestapiV2SearchOrgsRequest(body).execute();
    }

    /**
     * To get the details of a specific organization or all organizations in the ThoughtSpot system
     * use this end point. If no input is provided, then all organizations are included in the
     * response. Requires Administration privilege for tenant.
     * @param  body  Required parameter: Example:
     * @return    Returns the List of OrgsResponse response from the API call
     */
    public CompletableFuture<List<OrgsResponse>> restapiV2SearchOrgsAsync(
            final TspublicRestV2OrgSearchRequest body) {
        try { 
            return prepareRestapiV2SearchOrgsRequest(body).executeAsync(); 
        } catch (Exception e) {  
            throw new CompletionException(e); 
        }
    }

    /**
     * Builds the ApiCall object for restapiV2SearchOrgs.
     */
    private ApiCall<List<OrgsResponse>, ApiException> prepareRestapiV2SearchOrgsRequest(
            final TspublicRestV2OrgSearchRequest body) throws JsonProcessingException, IOException {
        return new ApiCall.Builder<List<OrgsResponse>, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.ENUM_DEFAULT.value())
                        .path("/tspublic/rest/v2/org/search")
                        .bodyParam(param -> param.value(body))
                        .bodySerializer(() ->  ApiHelper.serialize(body))
                        .headerParam(param -> param.key("Content-Type")
                                .value("application/json").isRequired(false))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .authenticationKey(BaseController.AUTHENTICATION_KEY)
                        .httpMethod(HttpMethod.POST))
                .responseHandler(responseHandler -> responseHandler
                        .deserializer(
                                response -> ApiHelper.deserializeArray(response,
                                        OrgsResponse[].class))
                        .nullify404(false)
                        .localErrorCase("500",
                                 ErrorCase.create("Operation failed",
                                (reason, context) -> new ErrorResponseException(reason, context)))
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .endpointConfiguration(param -> param
                                .arraySerializationFormat(ArraySerializationFormat.PLAIN
))
                .build();
    }
}