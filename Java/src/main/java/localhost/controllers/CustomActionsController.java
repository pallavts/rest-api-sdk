/*
 * ThoughtSpotPublicRESTAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package localhost.controllers;

import com.fasterxml.jackson.core.JsonProcessingException;
import io.apimatic.core.ApiCall;
import io.apimatic.core.ErrorCase;
import io.apimatic.core.GlobalConfiguration;
import io.apimatic.coreinterfaces.http.request.ArraySerializationFormat;
import java.io.IOException;
import java.util.concurrent.CompletableFuture;
import java.util.concurrent.CompletionException;
import localhost.ApiHelper;
import localhost.Server;
import localhost.exceptions.ApiException;
import localhost.exceptions.ErrorResponseException;
import localhost.http.request.HttpMethod;
import localhost.models.TspublicRestV2CustomactionAssociationUpdateRequest;
import localhost.models.TspublicRestV2CustomactionCreateRequest;
import localhost.models.TspublicRestV2CustomactionSearchRequest;
import localhost.models.TspublicRestV2CustomactionUpdateRequest;

/**
 * This class lists all the endpoints of the groups.
 */
public final class CustomActionsController extends BaseController {

    /**
     * Initializes the controller.
     * @param globalConfig    Configurations added in client.
     */
    public CustomActionsController(GlobalConfiguration globalConfig) {
        super(globalConfig);
    }

    /**
     * To get details of a specific custom action configured in the ThoughtSpot system, use this
     * endpoint.
     * @param  id  Required parameter: GUID of the custom action
     * @return    Returns the Object response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public Object restapiV2GetCustomAction(
            final String id) throws ApiException, IOException {
        return prepareRestapiV2GetCustomActionRequest(id).execute();
    }

    /**
     * To get details of a specific custom action configured in the ThoughtSpot system, use this
     * endpoint.
     * @param  id  Required parameter: GUID of the custom action
     * @return    Returns the Object response from the API call
     */
    public CompletableFuture<Object> restapiV2GetCustomActionAsync(
            final String id) {
        try { 
            return prepareRestapiV2GetCustomActionRequest(id).executeAsync(); 
        } catch (Exception e) {  
            throw new CompletionException(e); 
        }
    }

    /**
     * Builds the ApiCall object for restapiV2GetCustomAction.
     */
    private ApiCall<Object, ApiException> prepareRestapiV2GetCustomActionRequest(
            final String id) throws IOException {
        return new ApiCall.Builder<Object, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.ENUM_DEFAULT.value())
                        .path("/tspublic/rest/v2/customaction")
                        .queryParam(param -> param.key("id")
                                .value(id))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .authenticationKey(BaseController.AUTHENTICATION_KEY)
                        .httpMethod(HttpMethod.GET))
                .responseHandler(responseHandler -> responseHandler
                        .deserializer(
                                response -> response)
                        .nullify404(false)
                        .localErrorCase("500",
                                 ErrorCase.create("Operation failed",
                                (reason, context) -> new ErrorResponseException(reason, context)))
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .endpointConfiguration(param -> param
                                .arraySerializationFormat(ArraySerializationFormat.PLAIN
))
                .build();
    }

    /**
     * To search custom actions available on a ThoughtSpot instance, use this endpoint.
     * @param  body  Required parameter: Example:
     * @return    Returns the Object response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public Object restapiV2SearchCustomAction(
            final TspublicRestV2CustomactionSearchRequest body) throws ApiException, IOException {
        return prepareRestapiV2SearchCustomActionRequest(body).execute();
    }

    /**
     * To search custom actions available on a ThoughtSpot instance, use this endpoint.
     * @param  body  Required parameter: Example:
     * @return    Returns the Object response from the API call
     */
    public CompletableFuture<Object> restapiV2SearchCustomActionAsync(
            final TspublicRestV2CustomactionSearchRequest body) {
        try { 
            return prepareRestapiV2SearchCustomActionRequest(body).executeAsync(); 
        } catch (Exception e) {  
            throw new CompletionException(e); 
        }
    }

    /**
     * Builds the ApiCall object for restapiV2SearchCustomAction.
     */
    private ApiCall<Object, ApiException> prepareRestapiV2SearchCustomActionRequest(
            final TspublicRestV2CustomactionSearchRequest body) throws JsonProcessingException, IOException {
        return new ApiCall.Builder<Object, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.ENUM_DEFAULT.value())
                        .path("/tspublic/rest/v2/customaction/search")
                        .bodyParam(param -> param.value(body))
                        .bodySerializer(() ->  ApiHelper.serialize(body))
                        .headerParam(param -> param.key("Content-Type")
                                .value("application/json").isRequired(false))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .authenticationKey(BaseController.AUTHENTICATION_KEY)
                        .httpMethod(HttpMethod.POST))
                .responseHandler(responseHandler -> responseHandler
                        .deserializer(
                                response -> response)
                        .nullify404(false)
                        .localErrorCase("500",
                                 ErrorCase.create("Operation failed",
                                (reason, context) -> new ErrorResponseException(reason, context)))
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .endpointConfiguration(param -> param
                                .arraySerializationFormat(ArraySerializationFormat.PLAIN
))
                .build();
    }

    /**
     * ThoughtSpot supports associating custom actions to Liveboards, answers, and worksheets. To
     * get the details of the ThoughtSpot objects associated with a custom action, use this
     * endpoint.
     * @param  id  Required parameter: GUID of the custom action
     * @return    Returns the Object response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public Object restapiV2GetCustomActionAssociation(
            final String id) throws ApiException, IOException {
        return prepareRestapiV2GetCustomActionAssociationRequest(id).execute();
    }

    /**
     * ThoughtSpot supports associating custom actions to Liveboards, answers, and worksheets. To
     * get the details of the ThoughtSpot objects associated with a custom action, use this
     * endpoint.
     * @param  id  Required parameter: GUID of the custom action
     * @return    Returns the Object response from the API call
     */
    public CompletableFuture<Object> restapiV2GetCustomActionAssociationAsync(
            final String id) {
        try { 
            return prepareRestapiV2GetCustomActionAssociationRequest(id).executeAsync(); 
        } catch (Exception e) {  
            throw new CompletionException(e); 
        }
    }

    /**
     * Builds the ApiCall object for restapiV2GetCustomActionAssociation.
     */
    private ApiCall<Object, ApiException> prepareRestapiV2GetCustomActionAssociationRequest(
            final String id) throws IOException {
        return new ApiCall.Builder<Object, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.ENUM_DEFAULT.value())
                        .path("/tspublic/rest/v2/customaction/association")
                        .queryParam(param -> param.key("id")
                                .value(id))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .authenticationKey(BaseController.AUTHENTICATION_KEY)
                        .httpMethod(HttpMethod.GET))
                .responseHandler(responseHandler -> responseHandler
                        .deserializer(
                                response -> response)
                        .nullify404(false)
                        .localErrorCase("500",
                                 ErrorCase.create("Operation failed",
                                (reason, context) -> new ErrorResponseException(reason, context)))
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .endpointConfiguration(param -> param
                                .arraySerializationFormat(ArraySerializationFormat.PLAIN
))
                .build();
    }

    /**
     * To programmatically create custom actions on ThoughtSpot clusters that support embedding
     * configuration, use this endpoint.
     * @param  body  Required parameter: Example:
     * @return    Returns the Object response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public Object restapiV2CreateCustomAction(
            final TspublicRestV2CustomactionCreateRequest body) throws ApiException, IOException {
        return prepareRestapiV2CreateCustomActionRequest(body).execute();
    }

    /**
     * To programmatically create custom actions on ThoughtSpot clusters that support embedding
     * configuration, use this endpoint.
     * @param  body  Required parameter: Example:
     * @return    Returns the Object response from the API call
     */
    public CompletableFuture<Object> restapiV2CreateCustomActionAsync(
            final TspublicRestV2CustomactionCreateRequest body) {
        try { 
            return prepareRestapiV2CreateCustomActionRequest(body).executeAsync(); 
        } catch (Exception e) {  
            throw new CompletionException(e); 
        }
    }

    /**
     * Builds the ApiCall object for restapiV2CreateCustomAction.
     */
    private ApiCall<Object, ApiException> prepareRestapiV2CreateCustomActionRequest(
            final TspublicRestV2CustomactionCreateRequest body) throws JsonProcessingException, IOException {
        return new ApiCall.Builder<Object, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.ENUM_DEFAULT.value())
                        .path("/tspublic/rest/v2/customaction/create")
                        .bodyParam(param -> param.value(body))
                        .bodySerializer(() ->  ApiHelper.serialize(body))
                        .headerParam(param -> param.key("Content-Type")
                                .value("application/json").isRequired(false))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .authenticationKey(BaseController.AUTHENTICATION_KEY)
                        .httpMethod(HttpMethod.POST))
                .responseHandler(responseHandler -> responseHandler
                        .deserializer(
                                response -> response)
                        .nullify404(false)
                        .localErrorCase("500",
                                 ErrorCase.create("Operation failed",
                                (reason, context) -> new ErrorResponseException(reason, context)))
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .endpointConfiguration(param -> param
                                .arraySerializationFormat(ArraySerializationFormat.PLAIN
))
                .build();
    }

    /**
     * To programmatically edit an existing custom action, use this endpoint.
     * @param  body  Required parameter: Example:
     * @return    Returns the Object response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public Object restapiV2UpdateCustomAction(
            final TspublicRestV2CustomactionUpdateRequest body) throws ApiException, IOException {
        return prepareRestapiV2UpdateCustomActionRequest(body).execute();
    }

    /**
     * To programmatically edit an existing custom action, use this endpoint.
     * @param  body  Required parameter: Example:
     * @return    Returns the Object response from the API call
     */
    public CompletableFuture<Object> restapiV2UpdateCustomActionAsync(
            final TspublicRestV2CustomactionUpdateRequest body) {
        try { 
            return prepareRestapiV2UpdateCustomActionRequest(body).executeAsync(); 
        } catch (Exception e) {  
            throw new CompletionException(e); 
        }
    }

    /**
     * Builds the ApiCall object for restapiV2UpdateCustomAction.
     */
    private ApiCall<Object, ApiException> prepareRestapiV2UpdateCustomActionRequest(
            final TspublicRestV2CustomactionUpdateRequest body) throws JsonProcessingException, IOException {
        return new ApiCall.Builder<Object, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.ENUM_DEFAULT.value())
                        .path("/tspublic/rest/v2/customaction/update")
                        .bodyParam(param -> param.value(body))
                        .bodySerializer(() ->  ApiHelper.serialize(body))
                        .headerParam(param -> param.key("Content-Type")
                                .value("application/json").isRequired(false))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .authenticationKey(BaseController.AUTHENTICATION_KEY)
                        .httpMethod(HttpMethod.PUT))
                .responseHandler(responseHandler -> responseHandler
                        .deserializer(
                                response -> response)
                        .nullify404(false)
                        .localErrorCase("500",
                                 ErrorCase.create("Operation failed",
                                (reason, context) -> new ErrorResponseException(reason, context)))
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .endpointConfiguration(param -> param
                                .arraySerializationFormat(ArraySerializationFormat.PLAIN
))
                .build();
    }

    /**
     * To programmatically delete a custom action, use this endpoint.
     * @param  id  Required parameter: GUID of the custom action
     * @return    Returns the Object response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public Object restapiV2DeleteCustomAction(
            final String id) throws ApiException, IOException {
        return prepareRestapiV2DeleteCustomActionRequest(id).execute();
    }

    /**
     * To programmatically delete a custom action, use this endpoint.
     * @param  id  Required parameter: GUID of the custom action
     * @return    Returns the Object response from the API call
     */
    public CompletableFuture<Object> restapiV2DeleteCustomActionAsync(
            final String id) {
        try { 
            return prepareRestapiV2DeleteCustomActionRequest(id).executeAsync(); 
        } catch (Exception e) {  
            throw new CompletionException(e); 
        }
    }

    /**
     * Builds the ApiCall object for restapiV2DeleteCustomAction.
     */
    private ApiCall<Object, ApiException> prepareRestapiV2DeleteCustomActionRequest(
            final String id) throws IOException {
        return new ApiCall.Builder<Object, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.ENUM_DEFAULT.value())
                        .path("/tspublic/rest/v2/customaction/delete")
                        .queryParam(param -> param.key("id")
                                .value(id))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .authenticationKey(BaseController.AUTHENTICATION_KEY)
                        .httpMethod(HttpMethod.DELETE))
                .responseHandler(responseHandler -> responseHandler
                        .deserializer(
                                response -> response)
                        .nullify404(false)
                        .localErrorCase("500",
                                 ErrorCase.create("Operation failed",
                                (reason, context) -> new ErrorResponseException(reason, context)))
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .endpointConfiguration(param -> param
                                .arraySerializationFormat(ArraySerializationFormat.PLAIN
))
                .build();
    }

    /**
     * To programmatically associate a custom action to a ThoughtSpot object, use this endpoint.
     * @param  body  Required parameter: Example:
     * @return    Returns the Object response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public Object restapiV2UpdateCustomActionAssociation(
            final TspublicRestV2CustomactionAssociationUpdateRequest body) throws ApiException, IOException {
        return prepareRestapiV2UpdateCustomActionAssociationRequest(body).execute();
    }

    /**
     * To programmatically associate a custom action to a ThoughtSpot object, use this endpoint.
     * @param  body  Required parameter: Example:
     * @return    Returns the Object response from the API call
     */
    public CompletableFuture<Object> restapiV2UpdateCustomActionAssociationAsync(
            final TspublicRestV2CustomactionAssociationUpdateRequest body) {
        try { 
            return prepareRestapiV2UpdateCustomActionAssociationRequest(body).executeAsync(); 
        } catch (Exception e) {  
            throw new CompletionException(e); 
        }
    }

    /**
     * Builds the ApiCall object for restapiV2UpdateCustomActionAssociation.
     */
    private ApiCall<Object, ApiException> prepareRestapiV2UpdateCustomActionAssociationRequest(
            final TspublicRestV2CustomactionAssociationUpdateRequest body) throws JsonProcessingException, IOException {
        return new ApiCall.Builder<Object, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.ENUM_DEFAULT.value())
                        .path("/tspublic/rest/v2/customaction/association/update")
                        .bodyParam(param -> param.value(body))
                        .bodySerializer(() ->  ApiHelper.serialize(body))
                        .headerParam(param -> param.key("Content-Type")
                                .value("application/json").isRequired(false))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .authenticationKey(BaseController.AUTHENTICATION_KEY)
                        .httpMethod(HttpMethod.PUT))
                .responseHandler(responseHandler -> responseHandler
                        .deserializer(
                                response -> response)
                        .nullify404(false)
                        .localErrorCase("500",
                                 ErrorCase.create("Operation failed",
                                (reason, context) -> new ErrorResponseException(reason, context)))
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .endpointConfiguration(param -> param
                                .arraySerializationFormat(ArraySerializationFormat.PLAIN
))
                .build();
    }

    /**
     * To remove custom action associations to ThoughtSpot objects, use this endpoint.
     * @param  id  Required parameter: GUID of the custom action
     * @param  association  Required parameter: A JSON map of the attributes with association of the
     *         action to ThoughtSpot object ID Example:
     *         {"id":"0dbd5b3a-84c1-4407-9803-cf07d67e6fcf","name":"My worksheet
     *         action","version":"v2","type":"URL","detail":{"link":"https://unpkg.com","function":"my-worksheet-action","authSelect":"NONE","authToken":"","encodeUser":"","apiKey":"X-API-KEY","apiValue":"","additionalUrlHeaders":"{}"},"actionAssociationMap":{"WORKSHEET":{"2b9d083a-275c-4984-9cfe-90b036affa17":{"enabled":"true","context":"PRIMARY"}}},"context":"NONE","availability":[
     *         ],"userGroupList":["d0326b56-ef23-4c8a-8327-a30e99bcc72b"]}
     * @return    Returns the Object response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public Object restapiV2DeleteCustomActionAssociation(
            final String id,
            final String association) throws ApiException, IOException {
        return prepareRestapiV2DeleteCustomActionAssociationRequest(id, association).execute();
    }

    /**
     * To remove custom action associations to ThoughtSpot objects, use this endpoint.
     * @param  id  Required parameter: GUID of the custom action
     * @param  association  Required parameter: A JSON map of the attributes with association of the
     *         action to ThoughtSpot object ID Example:
     *         {"id":"0dbd5b3a-84c1-4407-9803-cf07d67e6fcf","name":"My worksheet
     *         action","version":"v2","type":"URL","detail":{"link":"https://unpkg.com","function":"my-worksheet-action","authSelect":"NONE","authToken":"","encodeUser":"","apiKey":"X-API-KEY","apiValue":"","additionalUrlHeaders":"{}"},"actionAssociationMap":{"WORKSHEET":{"2b9d083a-275c-4984-9cfe-90b036affa17":{"enabled":"true","context":"PRIMARY"}}},"context":"NONE","availability":[
     *         ],"userGroupList":["d0326b56-ef23-4c8a-8327-a30e99bcc72b"]}
     * @return    Returns the Object response from the API call
     */
    public CompletableFuture<Object> restapiV2DeleteCustomActionAssociationAsync(
            final String id,
            final String association) {
        try { 
            return prepareRestapiV2DeleteCustomActionAssociationRequest(id, association).executeAsync(); 
        } catch (Exception e) {  
            throw new CompletionException(e); 
        }
    }

    /**
     * Builds the ApiCall object for restapiV2DeleteCustomActionAssociation.
     */
    private ApiCall<Object, ApiException> prepareRestapiV2DeleteCustomActionAssociationRequest(
            final String id,
            final String association) throws IOException {
        return new ApiCall.Builder<Object, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.ENUM_DEFAULT.value())
                        .path("/tspublic/rest/v2/customactions/association/delete")
                        .queryParam(param -> param.key("id")
                                .value(id))
                        .queryParam(param -> param.key("association")
                                .value(association))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .authenticationKey(BaseController.AUTHENTICATION_KEY)
                        .httpMethod(HttpMethod.DELETE))
                .responseHandler(responseHandler -> responseHandler
                        .deserializer(
                                response -> response)
                        .nullify404(false)
                        .localErrorCase("500",
                                 ErrorCase.create("Operation failed",
                                (reason, context) -> new ErrorResponseException(reason, context)))
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .endpointConfiguration(param -> param
                                .arraySerializationFormat(ArraySerializationFormat.PLAIN
))
                .build();
    }
}