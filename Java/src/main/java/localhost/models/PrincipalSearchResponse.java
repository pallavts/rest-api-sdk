/*
 * RESTAPISDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package localhost.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for PrincipalSearchResponse type.
 */
public class PrincipalSearchResponse {
    private String id;
    private String name;
    private String type;
    private List<PermissionsTypeSearch> permissions;

    /**
     * Default constructor.
     */
    public PrincipalSearchResponse() {
    }

    /**
     * Initialization constructor.
     * @param  id  String value for id.
     * @param  name  String value for name.
     * @param  type  String value for type.
     * @param  permissions  List of PermissionsTypeSearch value for permissions.
     */
    public PrincipalSearchResponse(
            String id,
            String name,
            String type,
            List<PermissionsTypeSearch> permissions) {
        this.id = id;
        this.name = name;
        this.type = type;
        this.permissions = permissions;
    }

    /**
     * Getter for Id.
     * GUID of the user or user group
     * @return Returns the String
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * GUID of the user or user group
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for Name.
     * Name of the user or user group
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * Name of the user or user group
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Type.
     * Indicates the type of principal
     * @return Returns the String
     */
    @JsonGetter("type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * Indicates the type of principal
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for Permissions.
     * Indicates the permission which user or user group has on the object
     * @return Returns the List of PermissionsTypeSearch
     */
    @JsonGetter("permissions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<PermissionsTypeSearch> getPermissions() {
        return permissions;
    }

    /**
     * Setter for Permissions.
     * Indicates the permission which user or user group has on the object
     * @param permissions Value for List of PermissionsTypeSearch
     */
    @JsonSetter("permissions")
    public void setPermissions(List<PermissionsTypeSearch> permissions) {
        this.permissions = permissions;
    }

    /**
     * Converts this PrincipalSearchResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PrincipalSearchResponse [" + "id=" + id + ", name=" + name + ", type=" + type
                + ", permissions=" + permissions + "]";
    }

    /**
     * Builds a new {@link PrincipalSearchResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PrincipalSearchResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .id(getId())
                .name(getName())
                .type(getType())
                .permissions(getPermissions());
        return builder;
    }

    /**
     * Class to build instances of {@link PrincipalSearchResponse}.
     */
    public static class Builder {
        private String id;
        private String name;
        private String type;
        private List<PermissionsTypeSearch> permissions;



        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for permissions.
         * @param  permissions  List of PermissionsTypeSearch value for permissions.
         * @return Builder
         */
        public Builder permissions(List<PermissionsTypeSearch> permissions) {
            this.permissions = permissions;
            return this;
        }

        /**
         * Builds a new {@link PrincipalSearchResponse} object using the set fields.
         * @return {@link PrincipalSearchResponse}
         */
        public PrincipalSearchResponse build() {
            return new PrincipalSearchResponse(id, name, type, permissions);
        }
    }
}
