/*
 * ThoughtSpotPublicRESTAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package localhost.models;

import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;

/**
 * PrivilegeEnum to be used.
 */
public enum PrivilegeEnum {
    RANALYSIS,

    DATAMANAGEMENT,

    APPLICATION_ADMINISTRATION,

    USER_ADMINISTRATION,

    SYSTEMMANAGEMENT,

    SYSTEM_INFO_ADMINISTRATION,

    AUTHORING,

    BACKUP_ADMINISTRATION,

    SHAREWITHALL,

    DEVELOPER,

    JOBSCHEDULING,

    GROUP_ADMINISTRATION,

    BYPASSRLS,

    EXPERIMENTALFEATUREPRIVILEGE,

    A3ANALYSIS,

    USERDATAUPLOADING,

    DATADOWNLOADING,

    DISABLE_PINBOARD_CREATION,

    ADMINISTRATION;


    private static TreeMap<String, PrivilegeEnum> valueMap = new TreeMap<>();
    private String value;

    static {
        RANALYSIS.value = "RANALYSIS";
        DATAMANAGEMENT.value = "DATAMANAGEMENT";
        APPLICATION_ADMINISTRATION.value = "APPLICATION_ADMINISTRATION";
        USER_ADMINISTRATION.value = "USER_ADMINISTRATION";
        SYSTEMMANAGEMENT.value = "SYSTEMMANAGEMENT";
        SYSTEM_INFO_ADMINISTRATION.value = "SYSTEM_INFO_ADMINISTRATION";
        AUTHORING.value = "AUTHORING";
        BACKUP_ADMINISTRATION.value = "BACKUP_ADMINISTRATION";
        SHAREWITHALL.value = "SHAREWITHALL";
        DEVELOPER.value = "DEVELOPER";
        JOBSCHEDULING.value = "JOBSCHEDULING";
        GROUP_ADMINISTRATION.value = "GROUP_ADMINISTRATION";
        BYPASSRLS.value = "BYPASSRLS";
        EXPERIMENTALFEATUREPRIVILEGE.value = "EXPERIMENTALFEATUREPRIVILEGE";
        A3ANALYSIS.value = "A3ANALYSIS";
        USERDATAUPLOADING.value = "USERDATAUPLOADING";
        DATADOWNLOADING.value = "DATADOWNLOADING";
        DISABLE_PINBOARD_CREATION.value = "DISABLE_PINBOARD_CREATION";
        ADMINISTRATION.value = "ADMINISTRATION";

        valueMap.put("RANALYSIS", RANALYSIS);
        valueMap.put("DATAMANAGEMENT", DATAMANAGEMENT);
        valueMap.put("APPLICATION_ADMINISTRATION", APPLICATION_ADMINISTRATION);
        valueMap.put("USER_ADMINISTRATION", USER_ADMINISTRATION);
        valueMap.put("SYSTEMMANAGEMENT", SYSTEMMANAGEMENT);
        valueMap.put("SYSTEM_INFO_ADMINISTRATION", SYSTEM_INFO_ADMINISTRATION);
        valueMap.put("AUTHORING", AUTHORING);
        valueMap.put("BACKUP_ADMINISTRATION", BACKUP_ADMINISTRATION);
        valueMap.put("SHAREWITHALL", SHAREWITHALL);
        valueMap.put("DEVELOPER", DEVELOPER);
        valueMap.put("JOBSCHEDULING", JOBSCHEDULING);
        valueMap.put("GROUP_ADMINISTRATION", GROUP_ADMINISTRATION);
        valueMap.put("BYPASSRLS", BYPASSRLS);
        valueMap.put("EXPERIMENTALFEATUREPRIVILEGE", EXPERIMENTALFEATUREPRIVILEGE);
        valueMap.put("A3ANALYSIS", A3ANALYSIS);
        valueMap.put("USERDATAUPLOADING", USERDATAUPLOADING);
        valueMap.put("DATADOWNLOADING", DATADOWNLOADING);
        valueMap.put("DISABLE_PINBOARD_CREATION", DISABLE_PINBOARD_CREATION);
        valueMap.put("ADMINISTRATION", ADMINISTRATION);
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     */
    @com.fasterxml.jackson.annotation.JsonCreator
    public static PrivilegeEnum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member.
     * @return The string value against enum member.
     */
    @com.fasterxml.jackson.annotation.JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum.
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of PrivilegeEnum values to list of string values.
     * @param toConvert The list of PrivilegeEnum values to convert.
     * @return List of representative string values.
     */
    public static List<String> toValue(List<PrivilegeEnum> toConvert) {
        if (toConvert == null) {
            return null;
        }
        List<String> convertedValues = new ArrayList<>();
        for (PrivilegeEnum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 