/*
 * RESTAPISDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package localhost.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for PermissionsTypeSearch type.
 */
public class PermissionsTypeSearch {
    private String type;
    private List<TsObjectTypeSerach> tsObject;

    /**
     * Default constructor.
     */
    public PermissionsTypeSearch() {
    }

    /**
     * Initialization constructor.
     * @param  type  String value for type.
     * @param  tsObject  List of TsObjectTypeSerach value for tsObject.
     */
    public PermissionsTypeSearch(
            String type,
            List<TsObjectTypeSerach> tsObject) {
        this.type = type;
        this.tsObject = tsObject;
    }

    /**
     * Getter for Type.
     * Indicates the type of the object
     * @return Returns the String
     */
    @JsonGetter("type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * Indicates the type of the object
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for TsObject.
     * An array of objects of type mentioned in type field
     * @return Returns the List of TsObjectTypeSerach
     */
    @JsonGetter("tsObject")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<TsObjectTypeSerach> getTsObject() {
        return tsObject;
    }

    /**
     * Setter for TsObject.
     * An array of objects of type mentioned in type field
     * @param tsObject Value for List of TsObjectTypeSerach
     */
    @JsonSetter("tsObject")
    public void setTsObject(List<TsObjectTypeSerach> tsObject) {
        this.tsObject = tsObject;
    }

    /**
     * Converts this PermissionsTypeSearch into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PermissionsTypeSearch [" + "type=" + type + ", tsObject=" + tsObject + "]";
    }

    /**
     * Builds a new {@link PermissionsTypeSearch.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PermissionsTypeSearch.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .type(getType())
                .tsObject(getTsObject());
        return builder;
    }

    /**
     * Class to build instances of {@link PermissionsTypeSearch}.
     */
    public static class Builder {
        private String type;
        private List<TsObjectTypeSerach> tsObject;



        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for tsObject.
         * @param  tsObject  List of TsObjectTypeSerach value for tsObject.
         * @return Builder
         */
        public Builder tsObject(List<TsObjectTypeSerach> tsObject) {
            this.tsObject = tsObject;
            return this;
        }

        /**
         * Builds a new {@link PermissionsTypeSearch} object using the set fields.
         * @return {@link PermissionsTypeSearch}
         */
        public PermissionsTypeSearch build() {
            return new PermissionsTypeSearch(type, tsObject);
        }
    }
}
