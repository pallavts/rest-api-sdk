/*
 * ThoughtSpotPublicRESTAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package localhost.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for TspublicRestV2SecurityShareVisualizationRequest type.
 */
public class TspublicRestV2SecurityShareVisualizationRequest {
    private String id;
    private String vizId;
    private List<String> principalId;
    private List<String> emailId;
    private Boolean notify;
    private String message;
    private Boolean includeCustomEmbedUrl;

    /**
     * Default constructor.
     */
    public TspublicRestV2SecurityShareVisualizationRequest() {
        notify = true;
        includeCustomEmbedUrl = false;
    }

    /**
     * Initialization constructor.
     * @param  id  String value for id.
     * @param  vizId  String value for vizId.
     * @param  principalId  List of String value for principalId.
     * @param  emailId  List of String value for emailId.
     * @param  notify  Boolean value for notify.
     * @param  message  String value for message.
     * @param  includeCustomEmbedUrl  Boolean value for includeCustomEmbedUrl.
     */
    public TspublicRestV2SecurityShareVisualizationRequest(
            String id,
            String vizId,
            List<String> principalId,
            List<String> emailId,
            Boolean notify,
            String message,
            Boolean includeCustomEmbedUrl) {
        this.id = id;
        this.vizId = vizId;
        this.principalId = principalId;
        this.emailId = emailId;
        this.notify = notify;
        this.message = message;
        this.includeCustomEmbedUrl = includeCustomEmbedUrl;
    }

    /**
     * Getter for Id.
     * A JSON array of the GUIDs of the objects to be shared
     * @return Returns the String
     */
    @JsonGetter("id")
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * A JSON array of the GUIDs of the objects to be shared
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for VizId.
     * The GUID of visualization
     * @return Returns the String
     */
    @JsonGetter("vizId")
    public String getVizId() {
        return vizId;
    }

    /**
     * Setter for VizId.
     * The GUID of visualization
     * @param vizId Value for String
     */
    @JsonSetter("vizId")
    public void setVizId(String vizId) {
        this.vizId = vizId;
    }

    /**
     * Getter for PrincipalId.
     * The GUID of the users and user groups with which you want to share the visualization
     * @return Returns the List of String
     */
    @JsonGetter("principalId")
    public List<String> getPrincipalId() {
        return principalId;
    }

    /**
     * Setter for PrincipalId.
     * The GUID of the users and user groups with which you want to share the visualization
     * @param principalId Value for List of String
     */
    @JsonSetter("principalId")
    public void setPrincipalId(List<String> principalId) {
        this.principalId = principalId;
    }

    /**
     * Getter for EmailId.
     * The email addresses that should ne notified when the objects are shared
     * @return Returns the List of String
     */
    @JsonGetter("emailId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getEmailId() {
        return emailId;
    }

    /**
     * Setter for EmailId.
     * The email addresses that should ne notified when the objects are shared
     * @param emailId Value for List of String
     */
    @JsonSetter("emailId")
    public void setEmailId(List<String> emailId) {
        this.emailId = emailId;
    }

    /**
     * Getter for Notify.
     * When set to true, a notification is sent to the users after an object is shared.
     * @return Returns the Boolean
     */
    @JsonGetter("notify")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getNotify() {
        return notify;
    }

    /**
     * Setter for Notify.
     * When set to true, a notification is sent to the users after an object is shared.
     * @param notify Value for Boolean
     */
    @JsonSetter("notify")
    public void setNotify(Boolean notify) {
        this.notify = notify;
    }

    /**
     * Getter for Message.
     * The message text to send in the notification email.
     * @return Returns the String
     */
    @JsonGetter("message")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMessage() {
        return message;
    }

    /**
     * Setter for Message.
     * The message text to send in the notification email.
     * @param message Value for String
     */
    @JsonSetter("message")
    public void setMessage(String message) {
        this.message = message;
    }

    /**
     * Getter for IncludeCustomEmbedUrl.
     * When set to true, ThoughtSpot sends a link with the host application context to allow users
     * to access the shared object from their ThoughtSpot embedded instance.
     * @return Returns the Boolean
     */
    @JsonGetter("includeCustomEmbedUrl")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getIncludeCustomEmbedUrl() {
        return includeCustomEmbedUrl;
    }

    /**
     * Setter for IncludeCustomEmbedUrl.
     * When set to true, ThoughtSpot sends a link with the host application context to allow users
     * to access the shared object from their ThoughtSpot embedded instance.
     * @param includeCustomEmbedUrl Value for Boolean
     */
    @JsonSetter("includeCustomEmbedUrl")
    public void setIncludeCustomEmbedUrl(Boolean includeCustomEmbedUrl) {
        this.includeCustomEmbedUrl = includeCustomEmbedUrl;
    }

    /**
     * Converts this TspublicRestV2SecurityShareVisualizationRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "TspublicRestV2SecurityShareVisualizationRequest [" + "id=" + id + ", vizId=" + vizId
                + ", principalId=" + principalId + ", emailId=" + emailId + ", notify=" + notify
                + ", message=" + message + ", includeCustomEmbedUrl=" + includeCustomEmbedUrl + "]";
    }

    /**
     * Builds a new {@link TspublicRestV2SecurityShareVisualizationRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link TspublicRestV2SecurityShareVisualizationRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(id, vizId, principalId)
                .emailId(getEmailId())
                .notify(getNotify())
                .message(getMessage())
                .includeCustomEmbedUrl(getIncludeCustomEmbedUrl());
        return builder;
    }

    /**
     * Class to build instances of {@link TspublicRestV2SecurityShareVisualizationRequest}.
     */
    public static class Builder {
        private String id;
        private String vizId;
        private List<String> principalId;
        private List<String> emailId;
        private Boolean notify = true;
        private String message;
        private Boolean includeCustomEmbedUrl = false;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  id  String value for id.
         * @param  vizId  String value for vizId.
         * @param  principalId  List of String value for principalId.
         */
        public Builder(String id, String vizId, List<String> principalId) {
            this.id = id;
            this.vizId = vizId;
            this.principalId = principalId;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for vizId.
         * @param  vizId  String value for vizId.
         * @return Builder
         */
        public Builder vizId(String vizId) {
            this.vizId = vizId;
            return this;
        }

        /**
         * Setter for principalId.
         * @param  principalId  List of String value for principalId.
         * @return Builder
         */
        public Builder principalId(List<String> principalId) {
            this.principalId = principalId;
            return this;
        }

        /**
         * Setter for emailId.
         * @param  emailId  List of String value for emailId.
         * @return Builder
         */
        public Builder emailId(List<String> emailId) {
            this.emailId = emailId;
            return this;
        }

        /**
         * Setter for notify.
         * @param  notify  Boolean value for notify.
         * @return Builder
         */
        public Builder notify(Boolean notify) {
            this.notify = notify;
            return this;
        }

        /**
         * Setter for message.
         * @param  message  String value for message.
         * @return Builder
         */
        public Builder message(String message) {
            this.message = message;
            return this;
        }

        /**
         * Setter for includeCustomEmbedUrl.
         * @param  includeCustomEmbedUrl  Boolean value for includeCustomEmbedUrl.
         * @return Builder
         */
        public Builder includeCustomEmbedUrl(Boolean includeCustomEmbedUrl) {
            this.includeCustomEmbedUrl = includeCustomEmbedUrl;
            return this;
        }

        /**
         * Builds a new {@link TspublicRestV2SecurityShareVisualizationRequest} object using the set
         * fields.
         * @return {@link TspublicRestV2SecurityShareVisualizationRequest}
         */
        public TspublicRestV2SecurityShareVisualizationRequest build() {
            return new TspublicRestV2SecurityShareVisualizationRequest(id, vizId, principalId,
                    emailId, notify, message, includeCustomEmbedUrl);
        }
    }
}
