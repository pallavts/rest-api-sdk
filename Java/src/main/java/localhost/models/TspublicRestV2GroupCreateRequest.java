/*
 * ThoughtSpotPublicRESTAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package localhost.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for TspublicRestV2GroupCreateRequest type.
 */
public class TspublicRestV2GroupCreateRequest {
    private String name;
    private String displayName;
    private Visibility2Enum visibility;
    private String description;
    private List<PrivilegeEnum> privileges;
    private Integer orgId;
    private List<GroupNameAndIDInput> groups;
    private List<UserNameAndIDInput> users;
    private Type10Enum type;

    /**
     * Default constructor.
     */
    public TspublicRestV2GroupCreateRequest() {
        visibility = Visibility2Enum.DEFAULT;
        type = Type10Enum.LOCAL_GROUP;
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  displayName  String value for displayName.
     * @param  visibility  Visibility2Enum value for visibility.
     * @param  description  String value for description.
     * @param  privileges  List of PrivilegeEnum value for privileges.
     * @param  orgId  Integer value for orgId.
     * @param  groups  List of GroupNameAndIDInput value for groups.
     * @param  users  List of UserNameAndIDInput value for users.
     * @param  type  Type10Enum value for type.
     */
    public TspublicRestV2GroupCreateRequest(
            String name,
            String displayName,
            Visibility2Enum visibility,
            String description,
            List<PrivilegeEnum> privileges,
            Integer orgId,
            List<GroupNameAndIDInput> groups,
            List<UserNameAndIDInput> users,
            Type10Enum type) {
        this.name = name;
        this.displayName = displayName;
        this.visibility = visibility;
        this.description = description;
        this.privileges = privileges;
        this.orgId = orgId;
        this.groups = groups;
        this.users = users;
        this.type = type;
    }

    /**
     * Getter for Name.
     * Name of the user group. The group name string must be unique.
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * Name of the user group. The group name string must be unique.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for DisplayName.
     * A unique display name string for the user group, for example, Developer group.
     * @return Returns the String
     */
    @JsonGetter("displayName")
    public String getDisplayName() {
        return displayName;
    }

    /**
     * Setter for DisplayName.
     * A unique display name string for the user group, for example, Developer group.
     * @param displayName Value for String
     */
    @JsonSetter("displayName")
    public void setDisplayName(String displayName) {
        this.displayName = displayName;
    }

    /**
     * Getter for Visibility.
     * Visibility of the user group. The visibility attribute is set to DEFAULT. The DEFAULT
     * attribute makes the user group visible for other user groups and allows them to share
     * objects.
     * @return Returns the Visibility2Enum
     */
    @JsonGetter("visibility")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Visibility2Enum getVisibility() {
        return visibility;
    }

    /**
     * Setter for Visibility.
     * Visibility of the user group. The visibility attribute is set to DEFAULT. The DEFAULT
     * attribute makes the user group visible for other user groups and allows them to share
     * objects.
     * @param visibility Value for Visibility2Enum
     */
    @JsonSetter("visibility")
    public void setVisibility(Visibility2Enum visibility) {
        this.visibility = visibility;
    }

    /**
     * Getter for Description.
     * Description text for the group.
     * @return Returns the String
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * Description text for the group.
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for Privileges.
     * A JSON array of privileges assigned to the group
     * @return Returns the List of PrivilegeEnum
     */
    @JsonGetter("privileges")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<PrivilegeEnum> getPrivileges() {
        return privileges;
    }

    /**
     * Setter for Privileges.
     * A JSON array of privileges assigned to the group
     * @param privileges Value for List of PrivilegeEnum
     */
    @JsonSetter("privileges")
    public void setPrivileges(List<PrivilegeEnum> privileges) {
        this.privileges = privileges;
    }

    /**
     * Getter for OrgId.
     * Unique identifier of the organization. If no value is provided then group will be created in
     * the organization associated with the login session.
     * @return Returns the Integer
     */
    @JsonGetter("orgId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getOrgId() {
        return orgId;
    }

    /**
     * Setter for OrgId.
     * Unique identifier of the organization. If no value is provided then group will be created in
     * the organization associated with the login session.
     * @param orgId Value for Integer
     */
    @JsonSetter("orgId")
    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
    }

    /**
     * Getter for Groups.
     * Array of objects of groups that the group belong to.
     * @return Returns the List of GroupNameAndIDInput
     */
    @JsonGetter("groups")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<GroupNameAndIDInput> getGroups() {
        return groups;
    }

    /**
     * Setter for Groups.
     * Array of objects of groups that the group belong to.
     * @param groups Value for List of GroupNameAndIDInput
     */
    @JsonSetter("groups")
    public void setGroups(List<GroupNameAndIDInput> groups) {
        this.groups = groups;
    }

    /**
     * Getter for Users.
     * Array of names of user names that the group belong to.
     * @return Returns the List of UserNameAndIDInput
     */
    @JsonGetter("users")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<UserNameAndIDInput> getUsers() {
        return users;
    }

    /**
     * Setter for Users.
     * Array of names of user names that the group belong to.
     * @param users Value for List of UserNameAndIDInput
     */
    @JsonSetter("users")
    public void setUsers(List<UserNameAndIDInput> users) {
        this.users = users;
    }

    /**
     * Getter for Type.
     * Type of user group. LOCAL_GROUP indicates that the user is created locally in the ThoughtSpot
     * system.
     * @return Returns the Type10Enum
     */
    @JsonGetter("type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Type10Enum getType() {
        return type;
    }

    /**
     * Setter for Type.
     * Type of user group. LOCAL_GROUP indicates that the user is created locally in the ThoughtSpot
     * system.
     * @param type Value for Type10Enum
     */
    @JsonSetter("type")
    public void setType(Type10Enum type) {
        this.type = type;
    }

    /**
     * Converts this TspublicRestV2GroupCreateRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "TspublicRestV2GroupCreateRequest [" + "name=" + name + ", displayName="
                + displayName + ", visibility=" + visibility + ", description=" + description
                + ", privileges=" + privileges + ", orgId=" + orgId + ", groups=" + groups
                + ", users=" + users + ", type=" + type + "]";
    }

    /**
     * Builds a new {@link TspublicRestV2GroupCreateRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link TspublicRestV2GroupCreateRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(name, displayName)
                .visibility(getVisibility())
                .description(getDescription())
                .privileges(getPrivileges())
                .orgId(getOrgId())
                .groups(getGroups())
                .users(getUsers())
                .type(getType());
        return builder;
    }

    /**
     * Class to build instances of {@link TspublicRestV2GroupCreateRequest}.
     */
    public static class Builder {
        private String name;
        private String displayName;
        private Visibility2Enum visibility = Visibility2Enum.DEFAULT;
        private String description;
        private List<PrivilegeEnum> privileges;
        private Integer orgId;
        private List<GroupNameAndIDInput> groups;
        private List<UserNameAndIDInput> users;
        private Type10Enum type = Type10Enum.LOCAL_GROUP;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  name  String value for name.
         * @param  displayName  String value for displayName.
         */
        public Builder(String name, String displayName) {
            this.name = name;
            this.displayName = displayName;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for displayName.
         * @param  displayName  String value for displayName.
         * @return Builder
         */
        public Builder displayName(String displayName) {
            this.displayName = displayName;
            return this;
        }

        /**
         * Setter for visibility.
         * @param  visibility  Visibility2Enum value for visibility.
         * @return Builder
         */
        public Builder visibility(Visibility2Enum visibility) {
            this.visibility = visibility;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for privileges.
         * @param  privileges  List of PrivilegeEnum value for privileges.
         * @return Builder
         */
        public Builder privileges(List<PrivilegeEnum> privileges) {
            this.privileges = privileges;
            return this;
        }

        /**
         * Setter for orgId.
         * @param  orgId  Integer value for orgId.
         * @return Builder
         */
        public Builder orgId(Integer orgId) {
            this.orgId = orgId;
            return this;
        }

        /**
         * Setter for groups.
         * @param  groups  List of GroupNameAndIDInput value for groups.
         * @return Builder
         */
        public Builder groups(List<GroupNameAndIDInput> groups) {
            this.groups = groups;
            return this;
        }

        /**
         * Setter for users.
         * @param  users  List of UserNameAndIDInput value for users.
         * @return Builder
         */
        public Builder users(List<UserNameAndIDInput> users) {
            this.users = users;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  Type10Enum value for type.
         * @return Builder
         */
        public Builder type(Type10Enum type) {
            this.type = type;
            return this;
        }

        /**
         * Builds a new {@link TspublicRestV2GroupCreateRequest} object using the set fields.
         * @return {@link TspublicRestV2GroupCreateRequest}
         */
        public TspublicRestV2GroupCreateRequest build() {
            return new TspublicRestV2GroupCreateRequest(name, displayName, visibility, description,
                    privileges, orgId, groups, users, type);
        }
    }
}
