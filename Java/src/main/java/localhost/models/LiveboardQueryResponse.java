/*
 * ThoughtSpotPublicRESTAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package localhost.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for LiveboardQueryResponse type.
 */
public class LiveboardQueryResponse {
    private String name;
    private String id;
    private List<VizType> viz;

    /**
     * Default constructor.
     */
    public LiveboardQueryResponse() {
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  id  String value for id.
     * @param  viz  List of VizType value for viz.
     */
    public LiveboardQueryResponse(
            String name,
            String id,
            List<VizType> viz) {
        this.name = name;
        this.id = id;
        this.viz = viz;
    }

    /**
     * Getter for Name.
     * The name of the Liveboard
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * The name of the Liveboard
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Id.
     * The GUID of the Liveboard
     * @return Returns the String
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * The GUID of the Liveboard
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for Viz.
     * SQL query associated with the saved Answer
     * @return Returns the List of VizType
     */
    @JsonGetter("viz")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<VizType> getViz() {
        return viz;
    }

    /**
     * Setter for Viz.
     * SQL query associated with the saved Answer
     * @param viz Value for List of VizType
     */
    @JsonSetter("viz")
    public void setViz(List<VizType> viz) {
        this.viz = viz;
    }

    /**
     * Converts this LiveboardQueryResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "LiveboardQueryResponse [" + "name=" + name + ", id=" + id + ", viz=" + viz + "]";
    }

    /**
     * Builds a new {@link LiveboardQueryResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link LiveboardQueryResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .name(getName())
                .id(getId())
                .viz(getViz());
        return builder;
    }

    /**
     * Class to build instances of {@link LiveboardQueryResponse}.
     */
    public static class Builder {
        private String name;
        private String id;
        private List<VizType> viz;



        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for viz.
         * @param  viz  List of VizType value for viz.
         * @return Builder
         */
        public Builder viz(List<VizType> viz) {
            this.viz = viz;
            return this;
        }

        /**
         * Builds a new {@link LiveboardQueryResponse} object using the set fields.
         * @return {@link LiveboardQueryResponse}
         */
        public LiveboardQueryResponse build() {
            return new LiveboardQueryResponse(name, id, viz);
        }
    }
}
