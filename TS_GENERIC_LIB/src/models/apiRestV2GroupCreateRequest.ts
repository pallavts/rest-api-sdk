/**
 * TS Public RestAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, object, optional, Schema, string } from '../schema';
import { PrivilegeEnum, privilegeEnumSchema } from './privilegeEnum';
import { Type3Enum, type3EnumSchema } from './type3Enum';
import { Visibility3Enum, visibility3EnumSchema } from './visibility3Enum';

export interface ApiRestV2GroupCreateRequest {
  /** Name of the user group. The group name string must be unique. */
  name: string;
  /** A unique display name string for the user group, for example, Developer group. */
  displayName: string;
  /** Visibility of the user. The visibility attribute is set to DEFAULT when creating a user. Setting this to DEFAULT makes a user visible to other users and user groups, and thus allows them to share objects */
  visibility?: Visibility3Enum;
  /** Description text for the group */
  description?: string;
  /** A JSON array of privileges to be assigned to the group */
  privileges?: PrivilegeEnum[];
  /** A JSON array of group names */
  groupNames?: string[];
  /** A JSON array of usernames to be added to the group */
  userNames?: string[];
  /** Type of user group. LOCAL_GROUP indicates that the group is created locally in the ThoughtSpot system. */
  type?: Type3Enum;
}

export const apiRestV2GroupCreateRequestSchema: Schema<ApiRestV2GroupCreateRequest> = object(
  {
    name: ['name', string()],
    displayName: ['displayName', string()],
    visibility: ['visibility', optional(visibility3EnumSchema)],
    description: ['description', optional(string())],
    privileges: ['privileges', optional(array(privilegeEnumSchema))],
    groupNames: ['groupNames', optional(array(string()))],
    userNames: ['userNames', optional(array(string()))],
    type: ['type', optional(type3EnumSchema)],
  }
);
