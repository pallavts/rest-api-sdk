/**
 * ThoughtSpot Public REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class SearchCommitsRequest {
    /**
    * Unique ID or name of the metadata.
    */
    'metadataIdentifier': string;
    /**
    * Type of metadata.
    */
    'metadataType'?: SearchCommitsRequest.MetadataTypeEnum;
    /**
    *    Name of the branch from which commit history needs to be displayed.      Note: If no branch_name is specified, then commits will be returned for the default branch for this configuration.
    */
    'branchName'?: string;
    /**
    *     Record offset point in the commit history to display the response.       Note: If no record offset is specified, the beginning of the record will be considered.
    */
    'recordOffset'?: number;
    /**
    *     Number of history records from record offset point to be displayed in the response.       Note: If no record size is specified, then all the records will be considered.
    */
    'recordSize'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "metadataIdentifier",
            "baseName": "metadata_identifier",
            "type": "string"
        },
        {
            "name": "metadataType",
            "baseName": "metadata_type",
            "type": "SearchCommitsRequest.MetadataTypeEnum"
        },
        {
            "name": "branchName",
            "baseName": "branch_name",
            "type": "string"
        },
        {
            "name": "recordOffset",
            "baseName": "record_offset",
            "type": "number"
        },
        {
            "name": "recordSize",
            "baseName": "record_size",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return SearchCommitsRequest.attributeTypeMap;
    }
}

export namespace SearchCommitsRequest {
    export enum MetadataTypeEnum {
        Liveboard = <any> 'LIVEBOARD',
        Answer = <any> 'ANSWER',
        LogicalTable = <any> 'LOGICAL_TABLE'
    }
}
