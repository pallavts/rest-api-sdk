/**
 * ThoughtSpot Public REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class MetadataListItemInput {
    /**
    * Unique ID or name of the metadata.
    */
    'identifier'?: string;
    /**
    * A pattern to match case-insensitive name of the metadata object. User % for a wildcard match.
    */
    'namePattern'?: string;
    /**
    * Type of metadata. 1. Liveboard 2. Answers 3. LOGICAL_TABLE for any data object such as table, worksheet or view. 4. LOGICAL_COLUMN for a column of any data object such as table, worksheet or view. 5. CONNECTION for creating or modify data connections. 6. TAG for tag objects. 7. USER for user objects. 8. USER_GROUP for user group objects. 9. LOGICAL_RELATIONSHIP for table or worksheet joins. A join combines from one or several data object by using matching values
    */
    'type'?: MetadataListItemInput.TypeEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "identifier",
            "baseName": "identifier",
            "type": "string"
        },
        {
            "name": "namePattern",
            "baseName": "name_pattern",
            "type": "string"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "MetadataListItemInput.TypeEnum"
        }    ];

    static getAttributeTypeMap() {
        return MetadataListItemInput.attributeTypeMap;
    }
}

export namespace MetadataListItemInput {
    export enum TypeEnum {
        Liveboard = <any> 'LIVEBOARD',
        Answer = <any> 'ANSWER',
        LogicalTable = <any> 'LOGICAL_TABLE',
        LogicalColumn = <any> 'LOGICAL_COLUMN',
        Connection = <any> 'CONNECTION',
        Tag = <any> 'TAG',
        User = <any> 'USER',
        UserGroup = <any> 'USER_GROUP',
        LogicalRelationship = <any> 'LOGICAL_RELATIONSHIP'
    }
}
