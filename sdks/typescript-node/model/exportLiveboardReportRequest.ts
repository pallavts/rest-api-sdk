/**
 * ThoughtSpot Public REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { PdfOptionsInput } from './pdfOptionsInput';
import { PngOptionsInput } from './pngOptionsInput';

export class ExportLiveboardReportRequest {
    /**
    * GUID or name of the Liveboard object.
    */
    'metadataIdentifier': string;
    /**
    * GUID or name of visualizations on the Liveboard. If this parameter is not defined, the API returns a report with all visualizations saved on a Liveboard.
    */
    'visualizationIdentifiers'?: Array<string>;
    /**
    * Transient content of the Liveboard.
    */
    'transientContent'?: string;
    /**
    * Export file format.
    */
    'fileFormat'?: ExportLiveboardReportRequest.FileFormatEnum = ExportLiveboardReportRequest.FileFormatEnum.Csv;
    /**
    * JSON string representing runtime filter. { col1:\'region\', op1: \'EQ\', val1: \'northeast\' }
    */
    'runtimeFilter'?: object;
    /**
    * JSON string representing runtime sort. { sortCol1: \'region\', asc1 : true, sortCol2 : \'date\' }
    */
    'runtimeSort'?: object;
    'pdfOptions'?: PdfOptionsInput;
    'pngOptions'?: PngOptionsInput;
    /**
    * JSON object for setting values of parameters in runtime.
    */
    'runtimeParamOverride'?: object;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "metadataIdentifier",
            "baseName": "metadata_identifier",
            "type": "string"
        },
        {
            "name": "visualizationIdentifiers",
            "baseName": "visualization_identifiers",
            "type": "Array<string>"
        },
        {
            "name": "transientContent",
            "baseName": "transient_content",
            "type": "string"
        },
        {
            "name": "fileFormat",
            "baseName": "file_format",
            "type": "ExportLiveboardReportRequest.FileFormatEnum"
        },
        {
            "name": "runtimeFilter",
            "baseName": "runtime_filter",
            "type": "object"
        },
        {
            "name": "runtimeSort",
            "baseName": "runtime_sort",
            "type": "object"
        },
        {
            "name": "pdfOptions",
            "baseName": "pdf_options",
            "type": "PdfOptionsInput"
        },
        {
            "name": "pngOptions",
            "baseName": "png_options",
            "type": "PngOptionsInput"
        },
        {
            "name": "runtimeParamOverride",
            "baseName": "runtime_param_override",
            "type": "object"
        }    ];

    static getAttributeTypeMap() {
        return ExportLiveboardReportRequest.attributeTypeMap;
    }
}

export namespace ExportLiveboardReportRequest {
    export enum FileFormatEnum {
        Csv = <any> 'CSV',
        Pdf = <any> 'PDF',
        Xlsx = <any> 'XLSX',
        Png = <any> 'PNG'
    }
}
