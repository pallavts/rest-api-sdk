/**
 * ThoughtSpot Public REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class PdfOptionsInput {
    /**
    * Indicates whether to include cover page with the Liveboard title.
    */
    'includeCoverPage'?: boolean;
    /**
    * Indicates whether to include customized wide logo in the footer if available.
    */
    'includeCustomLogo'?: boolean;
    /**
    * Indicates whether to include a page with all applied filters.
    */
    'includeFilterPage'?: boolean;
    /**
    * Indicates whether to include page number in the footer of each page.
    */
    'includePageNumber'?: boolean;
    /**
    * Page orientation of the PDF.
    */
    'pageOrientation'?: PdfOptionsInput.PageOrientationEnum;
    /**
    * Indicates whether to include only first page of the tables.
    */
    'truncateTable'?: boolean;
    /**
    * Text to include in the footer of each page.
    */
    'pageFooterText'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "includeCoverPage",
            "baseName": "include_cover_page",
            "type": "boolean"
        },
        {
            "name": "includeCustomLogo",
            "baseName": "include_custom_logo",
            "type": "boolean"
        },
        {
            "name": "includeFilterPage",
            "baseName": "include_filter_page",
            "type": "boolean"
        },
        {
            "name": "includePageNumber",
            "baseName": "include_page_number",
            "type": "boolean"
        },
        {
            "name": "pageOrientation",
            "baseName": "page_orientation",
            "type": "PdfOptionsInput.PageOrientationEnum"
        },
        {
            "name": "truncateTable",
            "baseName": "truncate_table",
            "type": "boolean"
        },
        {
            "name": "pageFooterText",
            "baseName": "page_footer_text",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return PdfOptionsInput.attributeTypeMap;
    }
}

export namespace PdfOptionsInput {
    export enum PageOrientationEnum {
        Portrait = <any> 'PORTRAIT',
        Landscape = <any> 'LANDSCAPE'
    }
}
