/**
 * ThoughtSpot Public REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { GenericInfo } from './genericInfo';

export class RoleResponse {
    /**
    * Unique Id of the role.
    */
    'id': string;
    /**
    * Name of the role
    */
    'name': string;
    /**
    * Description of the role
    */
    'description': string;
    /**
    * number of groups assigned with this role
    */
    'groupsAssignedCount'?: number;
    /**
    * Organizations in which role exists.
    */
    'orgs'?: Array<GenericInfo>;
    /**
    * Details of groups assigned with this role
    */
    'groups'?: Array<GenericInfo>;
    /**
    * Privileges granted to the role.
    */
    'privileges': Array<RoleResponse.PrivilegesEnum>;
    /**
    * Permission details of the Role
    */
    'permission'?: RoleResponse.PermissionEnum;
    /**
    * Unique identifier of author of the role.
    */
    'authorId'?: string;
    /**
    * Unique identifier of modifier of the role.
    */
    'modifierId'?: string;
    /**
    * Creation time of the role in milliseconds.
    */
    'creationTimeInMillis'?: object;
    /**
    * Last modified time of the role in milliseconds.
    */
    'modificationTimeInMillis'?: object;
    /**
    * Indicates whether the role is deleted.
    */
    'deleted'?: boolean;
    /**
    * Indicates whether the role is deprecated.
    */
    'deprecated'?: boolean;
    /**
    * Indicates whether the role is external.
    */
    'external'?: boolean;
    /**
    * Indicates whether the role is hidden.
    */
    'hidden'?: boolean;
    /**
    * Indicates whether the role is shared via connection
    */
    'sharedViaConnection'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "groupsAssignedCount",
            "baseName": "groups_assigned_count",
            "type": "number"
        },
        {
            "name": "orgs",
            "baseName": "orgs",
            "type": "Array<GenericInfo>"
        },
        {
            "name": "groups",
            "baseName": "groups",
            "type": "Array<GenericInfo>"
        },
        {
            "name": "privileges",
            "baseName": "privileges",
            "type": "Array<RoleResponse.PrivilegesEnum>"
        },
        {
            "name": "permission",
            "baseName": "permission",
            "type": "RoleResponse.PermissionEnum"
        },
        {
            "name": "authorId",
            "baseName": "author_id",
            "type": "string"
        },
        {
            "name": "modifierId",
            "baseName": "modifier_id",
            "type": "string"
        },
        {
            "name": "creationTimeInMillis",
            "baseName": "creation_time_in_millis",
            "type": "object"
        },
        {
            "name": "modificationTimeInMillis",
            "baseName": "modification_time_in_millis",
            "type": "object"
        },
        {
            "name": "deleted",
            "baseName": "deleted",
            "type": "boolean"
        },
        {
            "name": "deprecated",
            "baseName": "deprecated",
            "type": "boolean"
        },
        {
            "name": "external",
            "baseName": "external",
            "type": "boolean"
        },
        {
            "name": "hidden",
            "baseName": "hidden",
            "type": "boolean"
        },
        {
            "name": "sharedViaConnection",
            "baseName": "shared_via_connection",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return RoleResponse.attributeTypeMap;
    }
}

export namespace RoleResponse {
    export enum PrivilegesEnum {
        Userdatauploading = <any> 'USERDATAUPLOADING',
        Datadownloading = <any> 'DATADOWNLOADING',
        Datamanagement = <any> 'DATAMANAGEMENT',
        Sharewithall = <any> 'SHAREWITHALL',
        Jobscheduling = <any> 'JOBSCHEDULING',
        A3Analysis = <any> 'A3ANALYSIS',
        Experimentalfeatureprivilege = <any> 'EXPERIMENTALFEATUREPRIVILEGE',
        Bypassrls = <any> 'BYPASSRLS',
        DisablePinboardCreation = <any> 'DISABLE_PINBOARD_CREATION',
        Developer = <any> 'DEVELOPER',
        ApplicationAdministration = <any> 'APPLICATION_ADMINISTRATION',
        UserAdministration = <any> 'USER_ADMINISTRATION',
        GroupAdministration = <any> 'GROUP_ADMINISTRATION',
        SystemInfoAdministration = <any> 'SYSTEM_INFO_ADMINISTRATION',
        Syncmanagement = <any> 'SYNCMANAGEMENT',
        OrgAdministration = <any> 'ORG_ADMINISTRATION',
        RoleAdministration = <any> 'ROLE_ADMINISTRATION',
        AuthenticationAdministration = <any> 'AUTHENTICATION_ADMINISTRATION',
        BillingInfoAdministration = <any> 'BILLING_INFO_ADMINISTRATION'
    }
    export enum PermissionEnum {
        ReadOnly = <any> 'READ_ONLY',
        Modify = <any> 'MODIFY',
        NoAccess = <any> 'NO_ACCESS'
    }
}
