/**
 * ThoughtSpot Public REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { FavoriteMetadataInput } from '../models/FavoriteMetadataInput';
import { HttpFile } from '../http/http';

export class CreateUserRequest {
    /**
    * Name of the user. The username string must be unique.
    */
    'name': string;
    /**
    * A unique display name string for the user account, usually their first and last name
    */
    'displayName': string;
    /**
    * Password for the user account.
    */
    'password': string;
    /**
    * Email of the user account
    */
    'email': string;
    /**
    * Type of the account.
    */
    'accountType'?: CreateUserRequestAccountTypeEnum;
    /**
    * Current status of the user account.
    */
    'accountStatus'?: CreateUserRequestAccountStatusEnum;
    /**
    * List of Org IDs to which the user belongs.
    */
    'orgIdentifiers'?: Array<string>;
    /**
    * GUIDs or names of the groups to which the newly created user belongs.
    */
    'groupIdentifiers'?: Array<string>;
    /**
    * Visibility of the users. When set to SHARABLE, the user is visible to other users and groups when they try to share an object.
    */
    'visibility'?: CreateUserRequestVisibilityEnum;
    /**
    * User preference for receiving email notifications when another ThoughtSpot user shares a metadata object such as Answer, Liveboard, or Worksheet.
    */
    'notifyOnShare'?: boolean | null;
    /**
    * The user preference for revisiting the onboarding experience.
    */
    'showOnboardingExperience'?: boolean | null;
    /**
    * flag to get the on-boarding experience is completed or not.
    */
    'onboardingExperienceCompleted'?: boolean | null;
    /**
    * GUID of the Liveboard to set a default Liveboard for the user. ThoughtSpot displays this Liveboard on the Home page when the user logs in.
    */
    'homeLiveboardIdentifier'?: string;
    /**
    * Metadata objects to add to the user\'s favorites list.
    */
    'favoriteMetadata'?: Array<FavoriteMetadataInput>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "displayName",
            "baseName": "display_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "password",
            "baseName": "password",
            "type": "string",
            "format": ""
        },
        {
            "name": "email",
            "baseName": "email",
            "type": "string",
            "format": ""
        },
        {
            "name": "accountType",
            "baseName": "account_type",
            "type": "CreateUserRequestAccountTypeEnum",
            "format": ""
        },
        {
            "name": "accountStatus",
            "baseName": "account_status",
            "type": "CreateUserRequestAccountStatusEnum",
            "format": ""
        },
        {
            "name": "orgIdentifiers",
            "baseName": "org_identifiers",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "groupIdentifiers",
            "baseName": "group_identifiers",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "visibility",
            "baseName": "visibility",
            "type": "CreateUserRequestVisibilityEnum",
            "format": ""
        },
        {
            "name": "notifyOnShare",
            "baseName": "notify_on_share",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "showOnboardingExperience",
            "baseName": "show_onboarding_experience",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "onboardingExperienceCompleted",
            "baseName": "onboarding_experience_completed",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "homeLiveboardIdentifier",
            "baseName": "home_liveboard_identifier",
            "type": "string",
            "format": ""
        },
        {
            "name": "favoriteMetadata",
            "baseName": "favorite_metadata",
            "type": "Array<FavoriteMetadataInput>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return CreateUserRequest.attributeTypeMap;
    }

    public constructor() {
    }
}


export type CreateUserRequestAccountTypeEnum = "LOCAL_USER" | "LDAP_USER" | "SAML_USER" | "OIDC_USER" | "REMOTE_USER" ;
export type CreateUserRequestAccountStatusEnum = "ACTIVE" | "INACTIVE" | "EXPIRED" | "LOCKED" | "PENDING" ;
export type CreateUserRequestVisibilityEnum = "SHARABLE" | "NON_SHARABLE" ;

