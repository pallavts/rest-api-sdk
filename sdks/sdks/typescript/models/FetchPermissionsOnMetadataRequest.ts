/**
 * ThoughtSpot Public REST API 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { PermissionsMetadataTypeInput } from '../models/PermissionsMetadataTypeInput';
import { PrincipalsInput } from '../models/PrincipalsInput';
import { HttpFile } from '../http/http';

export class FetchPermissionsOnMetadataRequest {
    /**
    * GUID or name of the metadata object.
    */
    'metadata': Array<PermissionsMetadataTypeInput>;
    /**
    * Principal objects for which you want to fetch permissions. If not specified, the API returns all users and groups that can access the specified metadata objects.
    */
    'principals'?: Array<PrincipalsInput>;
    /**
    * Indicates whether to fetch permissions of depedent metadata objects.
    */
    'includeDependentObjects'?: boolean | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "Array<PermissionsMetadataTypeInput>",
            "format": ""
        },
        {
            "name": "principals",
            "baseName": "principals",
            "type": "Array<PrincipalsInput>",
            "format": ""
        },
        {
            "name": "includeDependentObjects",
            "baseName": "include_dependent_objects",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return FetchPermissionsOnMetadataRequest.attributeTypeMap;
    }

    public constructor() {
    }
}

