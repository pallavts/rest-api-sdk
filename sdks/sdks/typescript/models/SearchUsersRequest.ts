/**
 * ThoughtSpot Public REST API 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { FavoriteMetadataInput } from '../models/FavoriteMetadataInput';
import { SortOptions } from '../models/SortOptions';
import { HttpFile } from '../http/http';

export class SearchUsersRequest {
    /**
    * GUID / name of the user to search
    */
    'userIdentifier'?: string;
    /**
    * A unique display name string for the user account, usually their first and last name
    */
    'displayName'?: string;
    /**
    * Visibility of the user.
    */
    'visibility'?: SearchUsersRequestVisibilityEnum;
    /**
    * Email of the user account
    */
    'email'?: string;
    /**
    * GUID or name of the group to which the user belongs.
    */
    'groupIdentifiers'?: Array<string>;
    /**
    * Privileges assigned to the user.
    */
    'privileges'?: Array<SearchUsersRequestPrivilegesEnum>;
    /**
    * Type of the account.
    */
    'accountType'?: SearchUsersRequestAccountTypeEnum;
    /**
    * Current status of the user account.
    */
    'accountStatus'?: SearchUsersRequestAccountStatusEnum;
    /**
    * User preference for receiving email notifications when another ThoughtSpot user shares a metadata object such as Answer, Liveboard, or Worksheet.
    */
    'notifyOnShare'?: boolean | null;
    /**
    * The user preference for revisiting the onboarding experience.
    */
    'showOnboardingExperience'?: boolean | null;
    /**
    * Indicates if the user has completed the onboarding walkthrough.
    */
    'onboardingExperienceCompleted'?: boolean | null;
    /**
    * IDs or names of the Orgs to which the user belongs
    */
    'orgIdentifiers'?: Array<string>;
    /**
    * Unique ID or name of the users home liveboard.
    */
    'homeLiveboardIdentifier'?: string;
    /**
    * Metadata objects which are assigned as favorites of the user.
    */
    'favoriteMetadata'?: Array<FavoriteMetadataInput>;
    /**
    * The starting record number from where the records should be included.
    */
    'recordOffset'?: number;
    /**
    * The number of records that should be included.
    */
    'recordSize'?: number;
    'sortOptions'?: SortOptions;
    /**
    * Filter with list of role assigned to the user.
    */
    'roleIdentifiers'?: Array<string>;
    /**
    * Indicates if the user\'s favorite objects should be displayed.
    */
    'includeFavoriteMetadata'?: boolean | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "userIdentifier",
            "baseName": "user_identifier",
            "type": "string",
            "format": ""
        },
        {
            "name": "displayName",
            "baseName": "display_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "visibility",
            "baseName": "visibility",
            "type": "SearchUsersRequestVisibilityEnum",
            "format": ""
        },
        {
            "name": "email",
            "baseName": "email",
            "type": "string",
            "format": ""
        },
        {
            "name": "groupIdentifiers",
            "baseName": "group_identifiers",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "privileges",
            "baseName": "privileges",
            "type": "Array<SearchUsersRequestPrivilegesEnum>",
            "format": ""
        },
        {
            "name": "accountType",
            "baseName": "account_type",
            "type": "SearchUsersRequestAccountTypeEnum",
            "format": ""
        },
        {
            "name": "accountStatus",
            "baseName": "account_status",
            "type": "SearchUsersRequestAccountStatusEnum",
            "format": ""
        },
        {
            "name": "notifyOnShare",
            "baseName": "notify_on_share",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "showOnboardingExperience",
            "baseName": "show_onboarding_experience",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "onboardingExperienceCompleted",
            "baseName": "onboarding_experience_completed",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "orgIdentifiers",
            "baseName": "org_identifiers",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "homeLiveboardIdentifier",
            "baseName": "home_liveboard_identifier",
            "type": "string",
            "format": ""
        },
        {
            "name": "favoriteMetadata",
            "baseName": "favorite_metadata",
            "type": "Array<FavoriteMetadataInput>",
            "format": ""
        },
        {
            "name": "recordOffset",
            "baseName": "record_offset",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "recordSize",
            "baseName": "record_size",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "sortOptions",
            "baseName": "sort_options",
            "type": "SortOptions",
            "format": ""
        },
        {
            "name": "roleIdentifiers",
            "baseName": "role_identifiers",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "includeFavoriteMetadata",
            "baseName": "include_favorite_metadata",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return SearchUsersRequest.attributeTypeMap;
    }

    public constructor() {
    }
}


export type SearchUsersRequestVisibilityEnum = "SHARABLE" | "NON_SHARABLE" ;
export type SearchUsersRequestPrivilegesEnum = "ADMINISTRATION" | "AUTHORING" | "USERDATAUPLOADING" | "DATADOWNLOADING" | "USERMANAGEMENT" | "DATAMANAGEMENT" | "SHAREWITHALL" | "JOBSCHEDULING" | "A3ANALYSIS" | "EXPERIMENTALFEATUREPRIVILEGE" | "BYPASSRLS" | "RANALYSIS" | "DEVELOPER" | "USER_ADMINISTRATION" | "GROUP_ADMINISTRATION" | "SYNCMANAGEMENT" | "CAN_CREATE_CATALOG" | "DISABLE_PINBOARD_CREATION" | "ENABLESPOTAPPCREATION" | "LIVEBOARD_VERIFIER" | "PREVIEW_THOUGHTSPOT_SAGE" ;
export type SearchUsersRequestAccountTypeEnum = "LOCAL_USER" | "LDAP_USER" | "SAML_USER" | "OIDC_USER" | "REMOTE_USER" ;
export type SearchUsersRequestAccountStatusEnum = "ACTIVE" | "INACTIVE" | "EXPIRED" | "LOCKED" | "PENDING" ;

