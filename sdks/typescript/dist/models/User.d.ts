import { FavoriteMetadataItem } from '../models/FavoriteMetadataItem';
import { ObjectIDAndName } from '../models/ObjectIDAndName';
import { Org } from '../models/Org';
export declare class User {
    'id': string;
    'name': string;
    'displayName': string;
    'visibility': UserVisibilityEnum;
    'authorId'?: string;
    'canChangePassword'?: boolean;
    'completeDetail'?: boolean;
    'creationTimeInMillis'?: number;
    'currentOrg'?: Org;
    'deleted'?: boolean;
    'deprecated'?: boolean;
    'accountType'?: UserAccountTypeEnum;
    'accountStatus'?: UserAccountStatusEnum;
    'email'?: string;
    'expirationTimeInMillis'?: number;
    'external'?: boolean;
    'favoriteMetadata'?: Array<FavoriteMetadataItem>;
    'firstLoginTimeInMillis'?: number;
    'groupMask'?: number;
    'hidden'?: boolean;
    'homeLiveboard'?: ObjectIDAndName;
    'incompleteDetails'?: any;
    'isFirstLogin'?: boolean;
    'modificationTimeInMillis'?: number;
    'modifierId'?: string;
    'notifyOnShare'?: boolean;
    'onboardingExperienceCompleted'?: boolean;
    'orgs'?: Array<Org>;
    'ownerId'?: string;
    'parentType'?: UserParentTypeEnum;
    'privileges'?: Array<string>;
    'showOnboardingExperience'?: boolean;
    'superUser'?: boolean;
    'systemUser'?: boolean;
    'tags'?: Array<ObjectIDAndName>;
    'tenantId'?: string;
    'userGroups'?: Array<ObjectIDAndName>;
    'userInheritedGroups'?: Array<ObjectIDAndName>;
    'welcomeEmailSent'?: boolean;
    'orgPrivileges'?: any;
    static readonly discriminator: string | undefined;
    static readonly attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
        format: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
        format: string;
    }[];
    constructor();
}
export type UserVisibilityEnum = "SHARABLE" | "NON_SHARABLE";
export type UserAccountTypeEnum = "LOCAL_USER" | "LDAP_USER" | "SAML_USER" | "OIDC_USER" | "REMOTE_USER";
export type UserAccountStatusEnum = "ACTIVE" | "INACTIVE" | "EXPIRED" | "LOCKED" | "PENDING";
export type UserParentTypeEnum = "USER" | "GROUP";
