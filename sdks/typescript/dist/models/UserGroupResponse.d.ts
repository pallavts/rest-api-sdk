import { Role } from '../models/Role';
import { UserGroup } from '../models/UserGroup';
export declare class UserGroupResponse {
    'author_id'?: string;
    'complete_detail'?: boolean;
    'content'?: any;
    'creation_time_in_millis'?: number;
    'default_liveboards'?: Array<UserGroup>;
    'deleted'?: boolean;
    'deprecated'?: boolean;
    'description'?: string;
    'display_name': string;
    'external'?: boolean;
    'generation_number'?: number;
    'hidden'?: boolean;
    'id': string;
    'index'?: number;
    'index_version'?: number;
    'metadata_version'?: number;
    'modification_time_in_millis'?: number;
    'modifier_id'?: string;
    'name': string;
    'orgs'?: Array<UserGroup>;
    'owner_id'?: string;
    'parent_type'?: UserGroupResponseParentTypeEnum;
    'privileges'?: Array<string>;
    'sub_groups'?: Array<UserGroup>;
    'system_group'?: boolean;
    'tags'?: Array<UserGroup>;
    'type'?: UserGroupResponseTypeEnum;
    'users'?: Array<UserGroup>;
    'visibility': UserGroupResponseVisibilityEnum;
    'roles'?: Array<Role>;
    static readonly discriminator: string | undefined;
    static readonly attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
        format: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
        format: string;
    }[];
    constructor();
}
export type UserGroupResponseParentTypeEnum = "USER" | "GROUP";
export type UserGroupResponseTypeEnum = "LOCAL_GROUP" | "LDAP_GROUP";
export type UserGroupResponseVisibilityEnum = "SHARABLE" | "NON_SHARABLE";
