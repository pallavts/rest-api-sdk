/**
 * ThoughtSpot Public REST API 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ConnectionInput } from '../models/ConnectionInput';
import { SortOptionInput } from '../models/SortOptionInput';
import { HttpFile } from '../http/http';

export class SearchConnectionRequest {
    /**
    * List of connections and name pattern
    */
    'connections'?: Array<ConnectionInput>;
    /**
    * Array of types of data warehouse defined for the connection.
    */
    'dataWarehouseTypes'?: Array<SearchConnectionRequestDataWarehouseTypesEnum>;
    /**
    * The starting record number from where the records should be included.
    */
    'recordOffset'?: number;
    /**
    * The number of records that should be included.
    */
    'recordSize'?: number;
    /**
    * Unique ID or name of tags.
    */
    'tagIdentifiers'?: Array<string>;
    /**
    * Data warehouse object type.
    */
    'dataWarehouseObjectType'?: SearchConnectionRequestDataWarehouseObjectTypeEnum;
    'sortOptions'?: SortOptionInput;
    /**
    * Indicates whether to include complete details of the connection objects.
    */
    'includeDetails'?: boolean | null;
    /**
    * Configuration values. If empty we are fetching configuration from datasource based on given connection id. If required you can provide config details to fetch specific details. Example input: {}, {\"warehouse\":\"SMALL_WH\",\"database\":\"DEVELOPMENT\"}. This is only applicable when data_warehouse_object_type is selected.
    */
    'configuration'?: any;
    /**
    * List of authentication types to fetch data_ware_house_objects from external Data warehouse. This is only applicable when data_warehouse_object_type is selected.
    */
    'authenticationType'?: SearchConnectionRequestAuthenticationTypeEnum;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "connections",
            "baseName": "connections",
            "type": "Array<ConnectionInput>",
            "format": ""
        },
        {
            "name": "dataWarehouseTypes",
            "baseName": "data_warehouse_types",
            "type": "Array<SearchConnectionRequestDataWarehouseTypesEnum>",
            "format": ""
        },
        {
            "name": "recordOffset",
            "baseName": "record_offset",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "recordSize",
            "baseName": "record_size",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "tagIdentifiers",
            "baseName": "tag_identifiers",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "dataWarehouseObjectType",
            "baseName": "data_warehouse_object_type",
            "type": "SearchConnectionRequestDataWarehouseObjectTypeEnum",
            "format": ""
        },
        {
            "name": "sortOptions",
            "baseName": "sort_options",
            "type": "SortOptionInput",
            "format": ""
        },
        {
            "name": "includeDetails",
            "baseName": "include_details",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "configuration",
            "baseName": "configuration",
            "type": "any",
            "format": ""
        },
        {
            "name": "authenticationType",
            "baseName": "authentication_type",
            "type": "SearchConnectionRequestAuthenticationTypeEnum",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return SearchConnectionRequest.attributeTypeMap;
    }

    public constructor() {
    }
}


export type SearchConnectionRequestDataWarehouseTypesEnum = "SNOWFLAKE" | "AMAZON_REDSHIFT" | "GOOGLE_BIGQUERY" | "AZURE_SYNAPSE" | "TERADATA" | "SAP_HANA" | "STARBURST" | "ORACLE_ADW" | "DATABRICKS" | "DENODO" | "DREMIO" | "TRINO" | "PRESTO" ;
export type SearchConnectionRequestDataWarehouseObjectTypeEnum = "DATABASE" | "SCHEMA" | "TABLE" | "COLUMN" ;
export type SearchConnectionRequestAuthenticationTypeEnum = "SERVICE_ACCOUNT" | "OAUTH" | "IAM" | "EXTOAUTH" ;

