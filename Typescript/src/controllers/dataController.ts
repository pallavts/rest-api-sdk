/**
 * RESTAPI SDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import { ErrorResponseError } from '../errors/errorResponseError';
import {
  TspublicRestV2DataAnswerRequest,
  tspublicRestV2DataAnswerRequestSchema,
} from '../models/tspublicRestV2DataAnswerRequest';
import {
  TspublicRestV2DataLiveboardRequest,
  tspublicRestV2DataLiveboardRequestSchema,
} from '../models/tspublicRestV2DataLiveboardRequest';
import {
  TspublicRestV2DataSearchRequest,
  tspublicRestV2DataSearchRequestSchema,
} from '../models/tspublicRestV2DataSearchRequest';
import { unknown } from '../schema';
import { BaseController } from './baseController';

export class DataController extends BaseController {
  /**
   * To programmatically retrieve data from ThoughtSpot using search query string, use this endpoint
   *
   * Permission: Requires at least view access to the dataobject and datadownloading privilege
   *
   * @param body
   * @return Response from the API call
   */
  async searchQueryData(
    body: TspublicRestV2DataSearchRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('POST', '/tspublic/rest/v2/data/search');
    const mapped = req.prepareArgs({
      body: [body, tspublicRestV2DataSearchRequestSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.throwOn(500, ErrorResponseError, 'Operation failed or unauthorized request');
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * To retrieve data related to a Answer from the ThoughtSpot system, you can use this endpoint.
   *
   * Permission: Requires at least view access to the object and datadownloading privilege
   *
   * @param body
   * @return Response from the API call
   */
  async answerData(
    body: TspublicRestV2DataAnswerRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('POST', '/tspublic/rest/v2/data/answer');
    const mapped = req.prepareArgs({
      body: [body, tspublicRestV2DataAnswerRequestSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.throwOn(500, ErrorResponseError, 'Operation failed or unauthorized request');
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * To retrieve data related to a Liveboard or visualization from the ThoughtSpot system, you can use
   * this endpoint
   *
   * Permission: Requires at least view access to the object and datadownloading privilege
   *
   * @param body
   * @return Response from the API call
   */
  async liveboardData(
    body: TspublicRestV2DataLiveboardRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('POST', '/tspublic/rest/v2/data/liveboard');
    const mapped = req.prepareArgs({
      body: [body, tspublicRestV2DataLiveboardRequestSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.throwOn(500, ErrorResponseError, 'Operation failed or unauthorized request');
    return req.callAsJson(unknown(), requestOptions);
  }
}
