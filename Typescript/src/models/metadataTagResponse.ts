/**
 * RESTAPI SDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  boolean,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import { ClientState, clientStateSchema } from './clientState';
import { TagNameAndID, tagNameAndIDSchema } from './tagNameAndID';

export interface MetadataTagResponse {
  /** Name of the tag */
  name?: string;
  /** GUID of the tag */
  id?: string;
  clientState?: ClientState;
  indexVersion?: number;
  generationNum?: number;
  /** Indicates if the tag is deleted */
  isDeleted?: boolean;
  /** Indicates if the tag is hidden */
  isHidden?: boolean;
  /** Indicates if the tag is from external system */
  isExternal?: boolean;
  isDeprecated?: boolean;
  /** Date and time when group was created */
  created?: number;
  /** Date and time of last modification of the group */
  modified?: number;
  modifiedBy?: TagNameAndID;
  author?: TagNameAndID;
  owner?: TagNameAndID;
}

export const metadataTagResponseSchema: Schema<MetadataTagResponse> = object({
  name: ['name', optional(string())],
  id: ['id', optional(string())],
  clientState: ['clientState', optional(lazy(() => clientStateSchema))],
  indexVersion: ['indexVersion', optional(number())],
  generationNum: ['generationNum', optional(number())],
  isDeleted: ['isDeleted', optional(boolean())],
  isHidden: ['isHidden', optional(boolean())],
  isExternal: ['isExternal', optional(boolean())],
  isDeprecated: ['isDeprecated', optional(boolean())],
  created: ['created', optional(number())],
  modified: ['modified', optional(number())],
  modifiedBy: ['modifiedBy', optional(lazy(() => tagNameAndIDSchema))],
  author: ['author', optional(lazy(() => tagNameAndIDSchema))],
  owner: ['owner', optional(lazy(() => tagNameAndIDSchema))],
});
