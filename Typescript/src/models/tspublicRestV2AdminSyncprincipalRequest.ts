/**
 * ThoughtSpot Public REST APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  object,
  optional,
  Schema,
  string,
  unknown,
} from '../schema';

export interface TspublicRestV2AdminSyncprincipalRequest {
  /**
   * A JSON array of principal objects containing all users and groups present in the external system.
   * Example:
   * {
   * "name": "Customer Success",
   * "displayName": "Customer Success",
   * "description": "CS",
   * "created": 1568926267025,
   * "modified": 1568926982242,
   * "principalTypeEnum": "LOCAL_GROUP",
   * "groupNames": [],
   * "visibility": "DEFAULT"
   * },
   * {
   * "name": "test",
   * "displayName": "test one",
   * "created": 1587573621279,
   * "modified": 1587573621674,
   * "mail": "test2@test.com",
   * "principalTypeEnum": "LOCAL_USER",
   * "groupNames": [ "Administrator", "All" ],
   * "visibility": "DEFAULT"
   * }
   * You can leave the created and modified dates blank for new users.
   * You can specify if the principal is a user (LOCAL_USER) or user group (LOCAL_GROUP) in the principalTypeEnum keyword.
   * Set visibility to NON_SHARABLE, if you do not want the user to be able to share ThoughtSpot objects with other users in this group.
   */
  principalObject: unknown[];
  /** Specifies whether to apply the changes to users and groups already in the cluster based on the principal object list input. */
  updateModified?: boolean;
  /** Specifies whether to delete the users and groups already in the cluster if not present in the principal object list input. */
  deleteRemoved?: boolean;
  /**
   * Assign a password for new users added during the sync operation.
   * All new users added will have this password. It is mandatory to provide value for this field if new users are included in the input list.
   */
  newUserPassword?: string;
}

export const tspublicRestV2AdminSyncprincipalRequestSchema: Schema<TspublicRestV2AdminSyncprincipalRequest> = object(
  {
    principalObject: ['principalObject', array(unknown())],
    updateModified: ['updateModified', optional(boolean())],
    deleteRemoved: ['deleteRemoved', optional(boolean())],
    newUserPassword: ['newUserPassword', optional(string())],
  }
);
