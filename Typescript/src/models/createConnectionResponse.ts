/**
 * ThoughtSpot Public REST APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import { UserNameAndID, userNameAndIDSchema } from './userNameAndID';

export interface CreateConnectionResponse {
  /** Name of the connection */
  name?: string;
  /** Description associated with the connection */
  description?: string;
  /** Type of the connection. The database associated with this type can be obtained from the response returned by the /tspublic/rest/v2/connection/types API endpoint. */
  type?: string;
  /** GUID of the connection */
  id?: string;
  /** Indicates if the data sync is scheduled for this connection */
  scheduled?: boolean;
  connectionType?: string;
  /** Configuration properties of the connection */
  configuration?: string;
  isExternal?: boolean;
  /** Indicates if the connection is deprecated */
  isDeprecated?: boolean;
  /** Indicates if the connection is deleted */
  isDeleted?: boolean;
  /** Indicates if the connection is hideen */
  isHidden?: boolean;
  /** Indicates if the all the properties of connection is provided */
  complete?: boolean;
  indexVersion?: number;
  generationNum?: number;
  /** Date and time when user account was created */
  created?: string;
  /** Date and time of last modification of user account */
  modified?: string;
  author?: UserNameAndID;
  modifiedBy?: UserNameAndID;
  owner?: UserNameAndID;
  /** List of tags assigned to the connection */
  tags?: string[];
  /** List of tables linked to this connection and details of the columns in the table */
  tables?: string[];
}

export const createConnectionResponseSchema: Schema<CreateConnectionResponse> = object(
  {
    name: ['name', optional(string())],
    description: ['description', optional(string())],
    type: ['type', optional(string())],
    id: ['id', optional(string())],
    scheduled: ['scheduled', optional(boolean())],
    connectionType: ['connectionType', optional(string())],
    configuration: ['configuration', optional(string())],
    isExternal: ['isExternal', optional(boolean())],
    isDeprecated: ['isDeprecated', optional(boolean())],
    isDeleted: ['isDeleted', optional(boolean())],
    isHidden: ['isHidden', optional(boolean())],
    complete: ['complete', optional(boolean())],
    indexVersion: ['indexVersion', optional(number())],
    generationNum: ['generationNum', optional(number())],
    created: ['created', optional(string())],
    modified: ['modified', optional(string())],
    author: ['author', optional(lazy(() => userNameAndIDSchema))],
    modifiedBy: ['modifiedBy', optional(lazy(() => userNameAndIDSchema))],
    owner: ['owner', optional(lazy(() => userNameAndIDSchema))],
    tags: ['tags', optional(array(string()))],
    tables: ['tables', optional(array(string()))],
  }
);
