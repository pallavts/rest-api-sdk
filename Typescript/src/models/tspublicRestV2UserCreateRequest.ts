/**
 * RESTAPI SDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, lazy, object, optional, Schema, string } from '../schema';
import {
  CreateUserAnalystOnboardingCompleteEnum,
  createUserAnalystOnboardingCompleteEnumSchema,
} from './createUserAnalystOnboardingCompleteEnum';
import {
  CreateUserNotifyOnShareEnum,
  createUserNotifyOnShareEnumSchema,
} from './createUserNotifyOnShareEnum';
import {
  CreateUserShowWalkMeEnum,
  createUserShowWalkMeEnumSchema,
} from './createUserShowWalkMeEnum';
import {
  CreateUserStateEnum,
  createUserStateEnumSchema,
} from './createUserStateEnum';
import {
  CreateUserTypeEnum,
  createUserTypeEnumSchema,
} from './createUserTypeEnum';
import {
  CreateUserVisibilityEnum,
  createUserVisibilityEnumSchema,
} from './createUserVisibilityEnum';
import {
  GroupNameAndIDInput,
  groupNameAndIDInputSchema,
} from './groupNameAndIDInput';

export interface TspublicRestV2UserCreateRequest {
  /** Name of the user account. The username string must be unique. */
  name: string;
  /** A display name string for the user, usually their first and last name. */
  displayName: string;
  /**
   * Visibility of the user. The visibility attribute is set to DEFAULT when creating a user.
   *  The DEFAULT attribute makes a user visible to other users and user groups, and thus allows them to share objects.
   */
  visibility?: CreateUserVisibilityEnum;
  /** Email id associated with the user account */
  mail?: string;
  /** Password for the user account. */
  password: string;
  /** A JSON array of group names or GUIDs or both. When both are given then id is considered */
  groups?: GroupNameAndIDInput[];
  /** Status of user account. acitve or inactive. */
  state?: CreateUserStateEnum;
  /** User preference for receiving email notifications when another ThoughtSpot user shares answers or pinboards. */
  notifyOnShare?: CreateUserNotifyOnShareEnum;
  /** The user preference for revisiting the onboarding experience. */
  showWalkMe?: CreateUserShowWalkMeEnum;
  /**
   * ThoughtSpot provides an interactive guided walkthrough to onboard new users. The onboarding experience leads users through a set of actions to help users get started and accomplish their tasks quickly.
   *  The users can turn off the Onboarding experience and access it again when they need assistance with the ThoughtSpot UI.
   */
  analystOnboardingComplete?: CreateUserAnalystOnboardingCompleteEnum;
  /** Type of user. LOCAL_USER indicates that the user is created locally in the ThoughtSpot system. */
  type?: CreateUserTypeEnum;
}

export const tspublicRestV2UserCreateRequestSchema: Schema<TspublicRestV2UserCreateRequest> = object(
  {
    name: ['name', string()],
    displayName: ['displayName', string()],
    visibility: ['visibility', optional(createUserVisibilityEnumSchema)],
    mail: ['mail', optional(string())],
    password: ['password', string()],
    groups: ['groups', optional(array(lazy(() => groupNameAndIDInputSchema)))],
    state: ['state', optional(createUserStateEnumSchema)],
    notifyOnShare: [
      'notifyOnShare',
      optional(createUserNotifyOnShareEnumSchema),
    ],
    showWalkMe: ['showWalkMe', optional(createUserShowWalkMeEnumSchema)],
    analystOnboardingComplete: [
      'analystOnboardingComplete',
      optional(createUserAnalystOnboardingCompleteEnumSchema),
    ],
    type: ['type', optional(createUserTypeEnumSchema)],
  }
);
