/**
 * RESTAPI SDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, lazy, object, Schema, string } from '../schema';
import {
  FromUserNameAndIDInput,
  fromUserNameAndIDInputSchema,
} from './fromUserNameAndIDInput';
import {
  ToUserNameAndIDInput,
  toUserNameAndIDInputSchema,
} from './toUserNameAndIDInput';

export interface TspublicRestV2AdminChangeownerRequest {
  /**
   * A JSON array of GUIDs of the metadata objects.
   *  To change owner of all the objects owned by a user, provide single input as ALL.
   *  If multiple object ids along with ALL is provided as input, then ALL will be considered.
   */
  tsObjectId: string[];
  /**
   * A JSON object of name or GUIDs of the current owner of the objects. When both are given then id is considered.
   * If a list of object ids are provided as input for TsObjectId, then only for those ids that have owner as the value provided in fromUser, the owner will be changed.
   * Provide either name or id as input. When both are given user id will be considered.
   */
  fromUser: FromUserNameAndIDInput;
  /** A JSON object of name or GUIDs of the new owner for the objects. When both are given then id is considered. */
  toUser: ToUserNameAndIDInput;
}

export const tspublicRestV2AdminChangeownerRequestSchema: Schema<TspublicRestV2AdminChangeownerRequest> = object(
  {
    tsObjectId: ['tsObjectId', array(string())],
    fromUser: ['fromUser', lazy(() => fromUserNameAndIDInputSchema)],
    toUser: ['toUser', lazy(() => toUserNameAndIDInputSchema)],
  }
);
