/**
 * RESTAPI SDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, lazy, object, optional, Schema, string } from '../schema';
import {
  LiveboardReportTypeEnum,
  liveboardReportTypeEnumSchema,
} from './liveboardReportTypeEnum';
import { PdfOptionsInput, pdfOptionsInputSchema } from './pdfOptionsInput';

export interface TspublicRestV2ReportLiveboardRequest {
  /**
   * GUID of the Liveboard to download.
   *  This field is considered only when no input is provided for transientContent field.
   */
  id?: string;
  /**
   * JSON Array of GUIDs of the visualizations in the Liveboard to be included in the downloaded file.
   *  For CSV, XLSX and PNG file download, visualization id is mandatory. CSV and XLSX is valid only for visualization of type table and PNG is valid for charts.
   *  Only one value will be accepted for these formats. If multiple values are provided then first value in the array will be considered.
   */
  vizId?: string[];
  /** If you have embedded ThoughtSpot in your host application, and you want to download Liveboards with unsaved changes as a file, pass the transient content from the browser fetch request, using the getExportRequestForCurrentPinboard method. For more information, see https://developers.thoughtspot.com/docs/?pageid=liveboard-export-api#transient-pinboard. */
  transientContent?: string;
  /**
   * JSON object which contains filter condition to filter the data at the time of data retrieval.
   *  Example: {"col1":"region","op1":"EQ","val1":"northeast","col2":"date","op2":"BET","val2":["1625126400000","1625126400000"]}
   *  For more information, see https://developers.thoughtspot.com/docs/?pageid=runtime-filters
   */
  runtimeFilter?: string;
  /**
   * JSON object which provides columns to sort the data at the time of data retrieval.
   *  Example: {"sortCol1":"region","asc1":true,"sortCol2":"date"}
   *  For more information, see https://developers.thoughtspot.com/docs/?pageid=runtime-filters
   */
  runtimeSort?: string;
  /** Type of file to be generated. */
  type: LiveboardReportTypeEnum;
  pdfOptions?: PdfOptionsInput;
}

export const tspublicRestV2ReportLiveboardRequestSchema: Schema<TspublicRestV2ReportLiveboardRequest> = object(
  {
    id: ['id', optional(string())],
    vizId: ['vizId', optional(array(string()))],
    transientContent: ['transientContent', optional(string())],
    runtimeFilter: ['runtimeFilter', optional(string())],
    runtimeSort: ['runtimeSort', optional(string())],
    type: ['type', liveboardReportTypeEnumSchema],
    pdfOptions: ['pdfOptions', optional(lazy(() => pdfOptionsInputSchema))],
  }
);
