/**
 * ThoughtSpot Public REST APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, lazy, object, optional, Schema, string } from '../schema';
import { GroupPermission, groupPermissionSchema } from './groupPermission';
import { UserNameAndID, userNameAndIDSchema } from './userNameAndID';

export interface TsObjectTypeSerach {
  /** GUID of the object */
  id?: string;
  /** Name of the object */
  name?: string;
  /** Owner of the object */
  owner?: string;
  author?: UserNameAndID;
  /** Indicates the permission which user or user group has on the object */
  permission?: string;
  /** Indicates the permission which user or user group has on the object through sharing of the object with the user or user group */
  sharedPermission?: string;
  /** An array of object with details of permission on the user groups to which the user or user group belongs */
  groupPermission?: GroupPermission[];
}

export const tsObjectTypeSerachSchema: Schema<TsObjectTypeSerach> = object({
  id: ['id', optional(string())],
  name: ['name', optional(string())],
  owner: ['owner', optional(string())],
  author: ['author', optional(lazy(() => userNameAndIDSchema))],
  permission: ['permission', optional(string())],
  sharedPermission: ['sharedPermission', optional(string())],
  groupPermission: [
    'groupPermission',
    optional(array(lazy(() => groupPermissionSchema))),
  ],
});
