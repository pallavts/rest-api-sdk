/**
 * ThoughtSpot Public REST APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { boolean, number, object, optional, Schema, string } from '../schema';

export interface LogicalTableHeader {
  id?: string;
  name?: string;
  author?: string;
  authorName?: string;
  authorDisplayName?: string;
  created?: number;
  modified?: number;
  modifiedBy?: string;
  generationNum?: number;
  owner?: string;
  deleted?: boolean;
  hidden?: boolean;
  database?: string;
  schema?: string;
  type?: string;
  subType?: string;
}

export const logicalTableHeaderSchema: Schema<LogicalTableHeader> = object({
  id: ['id', optional(string())],
  name: ['name', optional(string())],
  author: ['author', optional(string())],
  authorName: ['authorName', optional(string())],
  authorDisplayName: ['authorDisplayName', optional(string())],
  created: ['created', optional(number())],
  modified: ['modified', optional(number())],
  modifiedBy: ['modifiedBy', optional(string())],
  generationNum: ['generationNum', optional(number())],
  owner: ['owner', optional(string())],
  deleted: ['deleted', optional(boolean())],
  hidden: ['hidden', optional(boolean())],
  database: ['database', optional(string())],
  schema: ['schema', optional(string())],
  type: ['type', optional(string())],
  subType: ['subType', optional(string())],
});
