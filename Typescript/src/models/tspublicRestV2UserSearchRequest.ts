/**
 * RESTAPI SDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, lazy, object, optional, Schema, string } from '../schema';
import {
  GroupNameAndIDInput,
  groupNameAndIDInputSchema,
} from './groupNameAndIDInput';
import {
  SearchUsersAnalystOnboardingCompleteEnum,
  searchUsersAnalystOnboardingCompleteEnumSchema,
} from './searchUsersAnalystOnboardingCompleteEnum';
import {
  SearchUsersNotifyOnShareEnum,
  searchUsersNotifyOnShareEnumSchema,
} from './searchUsersNotifyOnShareEnum';
import {
  SearchUsersPrivilegesEnum,
  searchUsersPrivilegesEnumSchema,
} from './searchUsersPrivilegesEnum';
import {
  SearchUsersShowWalkMeEnum,
  searchUsersShowWalkMeEnumSchema,
} from './searchUsersShowWalkMeEnum';
import {
  SearchUsersStateEnum,
  searchUsersStateEnumSchema,
} from './searchUsersStateEnum';
import {
  SearchUsersTypeEnum,
  searchUsersTypeEnumSchema,
} from './searchUsersTypeEnum';
import {
  SearchUsersVisibilityEnum,
  searchUsersVisibilityEnumSchema,
} from './searchUsersVisibilityEnum';

export interface TspublicRestV2UserSearchRequest {
  /** Array of field names that need to be included in the response. */
  outputFields?: string[];
  /** Name of the user. */
  name?: string;
  /** The GUID of the user account to query */
  id?: string;
  /** A unique display name string for the user, usually their first and last name. */
  displayName?: string;
  /**
   * Visibility of the user.
   *  The visibility attribute is set to DEFAULT when creating a user. Setting this to DEFAULT makes a user visible to other users and user groups, and thus allows them to share objects
   */
  visibility?: SearchUsersVisibilityEnum;
  /** email of the user account */
  mail?: string;
  /** A JSON array of group names or GUIDs or both. When both are given then id is considered */
  groups?: GroupNameAndIDInput[];
  /** A JSON array of privileges assigned to the user */
  privileges?: SearchUsersPrivilegesEnum[];
  /** Status of user account. acitve or inactive. */
  state?: SearchUsersStateEnum;
  /** User preference for receiving email notifications when another ThoughtSpot user shares answers or pinboards. */
  notifyOnShare?: SearchUsersNotifyOnShareEnum;
  /** The user preference for revisiting the onboarding experience. */
  showWalkMe?: SearchUsersShowWalkMeEnum;
  /**
   * ThoughtSpot provides an interactive guided walkthrough to onboard new users. The onboarding experience leads users through a set of actions to help users get started and accomplish their tasks quickly.
   *  The users can turn off the Onboarding experience and access it again when they need assistance with the ThoughtSpot UI.
   */
  analystOnboardingComplete?: SearchUsersAnalystOnboardingCompleteEnum;
  /** Type of user. LOCAL_USER indicates that the user is created locally in the ThoughtSpot system. */
  type?: SearchUsersTypeEnum;
}

export const tspublicRestV2UserSearchRequestSchema: Schema<TspublicRestV2UserSearchRequest> = object(
  {
    outputFields: ['outputFields', optional(array(string()))],
    name: ['name', optional(string())],
    id: ['id', optional(string())],
    displayName: ['displayName', optional(string())],
    visibility: ['visibility', optional(searchUsersVisibilityEnumSchema)],
    mail: ['mail', optional(string())],
    groups: ['groups', optional(array(lazy(() => groupNameAndIDInputSchema)))],
    privileges: [
      'privileges',
      optional(array(searchUsersPrivilegesEnumSchema)),
    ],
    state: ['state', optional(searchUsersStateEnumSchema)],
    notifyOnShare: [
      'notifyOnShare',
      optional(searchUsersNotifyOnShareEnumSchema),
    ],
    showWalkMe: ['showWalkMe', optional(searchUsersShowWalkMeEnumSchema)],
    analystOnboardingComplete: [
      'analystOnboardingComplete',
      optional(searchUsersAnalystOnboardingCompleteEnumSchema),
    ],
    type: ['type', optional(searchUsersTypeEnumSchema)],
  }
);
