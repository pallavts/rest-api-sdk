# -*- coding: utf-8 -*-

"""
thoughtspotpublicrestapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json
import dateutil.parser

from tests.controllers.controller_test_base import ControllerTestBase
from apimatic_core.utilities.comparison_helper import ComparisonHelper
from thoughtspotpublicrestapi.api_helper import APIHelper


class MetadataControllerTests(ControllerTestBase):

    @classmethod
    def setUpClass(cls):
        super(MetadataControllerTests, cls).setUpClass()
        cls.controller = cls.client.metadata
        cls.response_catcher = cls.controller.http_call_back

    # To get details of a specific tag, use this endpoint. At least one of id or name of tag is required. When both are given, then id will be considered.
    def test_restapi_v_2__get_tag(self):
        # Parameters for the API call
        name = None
        id = None

        # Perform the API call through the SDK function
        result = self.controller.restapi_v_2__get_tag(name, id)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)


    # To get the name and id of liveboard that is set as a home liveboard for a user, use this endpoint. At least one of user id or username is required. When both are given, then id will be considered.
    def test_restapi_v_2__get_home_liveboard(self):
        # Parameters for the API call
        user_name = None
        user_id = None

        # Perform the API call through the SDK function
        result = self.controller.restapi_v_2__get_home_liveboard(user_name, user_id)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)


    # To programmatically delete tags, use this endpoint. At least one of id or name of tag is required. When both are given, then id will be considered.
    def test_restapi_v_2__delete_tag(self):
        # Parameters for the API call
        name = None
        id = None

        # Perform the API call through the SDK function
        result = self.controller.restapi_v_2__delete_tag(name, id)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)


