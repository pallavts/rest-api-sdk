# -*- coding: utf-8 -*-

"""
thoughtspotpublicrestapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from thoughtspotpublicrestapi.api_helper import APIHelper
from thoughtspotpublicrestapi.configuration import Server
from thoughtspotpublicrestapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from thoughtspotpublicrestapi.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimatic_core.authentication.multiple.and_auth_group import And
from apimatic_core.authentication.multiple.or_auth_group import Or
from thoughtspotpublicrestapi.models.orgs_response import OrgsResponse
from thoughtspotpublicrestapi.exceptions.error_response_exception import ErrorResponseException


class OrgController(BaseController):

    """A Controller to access Endpoints in the thoughtspotpublicrestapi API."""
    def __init__(self, config):
        super(OrgController, self).__init__(config)

    def restapi_v_2__get_org(self,
                             name=None,
                             id=None):
        """Does a GET request to /tspublic/rest/v2/org.

        To get the details of a specific organization by name or id, use this
        endpoint. 
        At least one value needed. When both are given,then id will be
        considered to fetch organization information. 
        Requires Administration privilege for tenant.

        Args:
            name (string, optional): Name of the organization.
            id (int, optional): The ID of the organization.

        Returns:
            OrgsResponse: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/tspublic/rest/v2/org')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('name')
                         .value(name))
            .query_param(Parameter()
                         .key('id')
                         .value(id))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OrgsResponse.from_dictionary)
            .local_error('500', 'Operation failed', ErrorResponseException)
        ).execute()

    def restapi_v_2__create_org(self,
                                body):
        """Does a POST request to /tspublic/rest/v2/org/create.

        To programmatically create an organization in the ThoughtSpot system,
        use this API endpoint. 
        Requires Administration privilege for tenant.

        Args:
            body (TspublicRestV2OrgCreateRequest): TODO: type description
                here.

        Returns:
            OrgsResponse: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/tspublic/rest/v2/org/create')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body)
                        .is_required(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OrgsResponse.from_dictionary)
            .local_error('500', 'Operation failed', ErrorResponseException)
        ).execute()

    def restapi_v_2__update_org(self,
                                body):
        """Does a PUT request to /tspublic/rest/v2/org/update.

        You can use this endpoint to programmatically modify an existing org.
                Provide name or id of the organization to update the properties. When
        both id and name are given, then id will be considered and name of the
        organization will be updated. 
        Requires Administration privilege for tenant.

        Args:
            body (TspublicRestV2OrgUpdateRequest): TODO: type description
                here.

        Returns:
            OrgsResponse: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/tspublic/rest/v2/org/update')
            .http_method(HttpMethodEnum.PUT)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body)
                        .is_required(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OrgsResponse.from_dictionary)
            .local_error('500', 'Operation failed', ErrorResponseException)
        ).execute()

    def restapi_v_2__delete_org(self,
                                name=None,
                                id=None):
        """Does a DELETE request to /tspublic/rest/v2/org/delete.

        To remove an organization from the ThoughtSpot system, send a DELETE
        request to this endpoint. 
        At least one value is needed. When both id and name are given, then id
        will be considered. 
        Requires Administration privilege for tenant.

        Args:
            name (string, optional): Name of the organization.
            id (int, optional): The ID of the organization.

        Returns:
            bool: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/tspublic/rest/v2/org/delete')
            .http_method(HttpMethodEnum.DELETE)
            .query_param(Parameter()
                         .key('name')
                         .value(name))
            .query_param(Parameter()
                         .key('id')
                         .value(id))
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('500', 'Operation failed', ErrorResponseException)
        ).execute()

    def restapi_v_2__search_orgs(self,
                                 body):
        """Does a POST request to /tspublic/rest/v2/org/search.

        To get the details of a specific organization or all organizations in
        the ThoughtSpot system use this end point. 
        If no input is provided, then all organizations are included in the
        response. 
        Requires Administration privilege for tenant.

        Args:
            body (TspublicRestV2OrgSearchRequest): TODO: type description
                here.

        Returns:
            list of OrgsResponse: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/tspublic/rest/v2/org/search')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body)
                        .is_required(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OrgsResponse.from_dictionary)
            .local_error('500', 'Operation failed', ErrorResponseException)
        ).execute()
