# -*- coding: utf-8 -*-

"""
thoughtspotpublicrestapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from thoughtspotpublicrestapi.api_helper import APIHelper
from thoughtspotpublicrestapi.configuration import Server
from thoughtspotpublicrestapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from thoughtspotpublicrestapi.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimatic_core.authentication.multiple.and_auth_group import And
from apimatic_core.authentication.multiple.or_auth_group import Or
from thoughtspotpublicrestapi.models.security_permission_response import SecurityPermissionResponse
from thoughtspotpublicrestapi.models.principal_search_response import PrincipalSearchResponse
from thoughtspotpublicrestapi.exceptions.error_response_exception import ErrorResponseException


class SecurityController(BaseController):

    """A Controller to access Endpoints in the thoughtspotpublicrestapi API."""
    def __init__(self, config):
        super(SecurityController, self).__init__(config)

    def restapi_v_2__get_permission_on_object(self,
                                              id,
                                              mtype,
                                              include_dependent=None):
        """Does a GET request to /tspublic/rest/v2/security/permission/tsobject.

        To list the permissions for user and user groups on an object, use
        this endpoint. The response will include only those users and groups
        with have either VIEW OR MODIFY permission. 
        You can optionally see the permission on the dependent objects as well
        by enabling includeDependent field.

        Args:
            id (string): GUID of the metadata object for which the permission
                needs to be obtained.
            mtype (Type7Enum): Type of metadata object. Valid values:
                Liveboard|Answer|DataObject|Column
            include_dependent (bool, optional): When this field is set to
                true, the API returns the permission details for the dependent
                objects for the the object included in the request

        Returns:
            SecurityPermissionResponse: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/tspublic/rest/v2/security/permission/tsobject')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('id')
                         .value(id)
                         .is_required(True))
            .query_param(Parameter()
                         .key('type')
                         .value(mtype)
                         .is_required(True))
            .query_param(Parameter()
                         .key('includeDependent')
                         .value(include_dependent))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SecurityPermissionResponse.from_dictionary)
            .local_error('500', 'Operation failed', ErrorResponseException)
        ).execute()

    def restapi_v_2__get_permission_for_principal(self,
                                                  id=None,
                                                  name=None):
        """Does a GET request to /tspublic/rest/v2/security/permission/principal.

        Use this endpoint to list the objects on which a user or user group
        has permission. The response will include only those objects on which
        the user or user group has either VIEW OR MODIFY permission. 
        Requires administration privilege

        Args:
            id (string, optional): GUID of the user or user group for which
                the object permission needs to be obtained
            name (string, optional): Name of the ser or user group for which
                the object permission needs to be obtained

        Returns:
            PrincipalSearchResponse: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/tspublic/rest/v2/security/permission/principal')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('id')
                         .value(id))
            .query_param(Parameter()
                         .key('name')
                         .value(name))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(PrincipalSearchResponse.from_dictionary)
            .local_error('500', 'Operation failed', ErrorResponseException)
        ).execute()

    def restapi_v_2__share_object(self,
                                  body):
        """Does a POST request to /tspublic/rest/v2/security/share/tsobject.

        To programmatically share ThoughtSpot objects with another user or
        user group, use this endpoint. 
        When you share an object like a Liveboard or visualization, a
        notification with a live link is sent to the user. When the users
        access this object, they can view the last saved version of the
        object.

        Args:
            body (TspublicRestV2SecurityShareTsobjectRequest): TODO: type
                description here.

        Returns:
            bool: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/tspublic/rest/v2/security/share/tsobject')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body)
                        .is_required(True))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('500', 'Operation failed', ErrorResponseException)
        ).execute()

    def restapi_v_2__share_visualization(self,
                                         body):
        """Does a POST request to /tspublic/rest/v2/security/share/visualization.

        If you want to share a specific visualization from a Liveboard with
        another user or user group, then use this endpoint. 
        Requires privilege to share the visualization

        Args:
            body (TspublicRestV2SecurityShareVisualizationRequest): TODO: type
                description here.

        Returns:
            bool: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/tspublic/rest/v2/security/share/visualization')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body)
                        .is_required(True))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('500', 'Operation failed', ErrorResponseException)
        ).execute()

    def restapi_v_2__search_permission_on_objects(self,
                                                  body):
        """Does a POST request to /tspublic/rest/v2/security/permission/tsobject/search.

        To list the permissions for user and user groups on a list of objects,
        use this endpoint. The response will include only those users and
        groups with have either VIEW OR MODIFY permission. 
        You can either provide list of object ids or type of objects to list
        the permissions for. One of these inputs is mandatory. If both are
        provided then only object ids will be considred. 
        You can optionally provide users or user groups for which the
        persmission needs to be displayed. 
        You can optionally see the permission on the dependent objects as well
        by enabling includeDependent field. 
        Requires administration privilege

        Args:
            body (TspublicRestV2SecurityPermissionTsobjectSearchRequest):
                TODO: type description here.

        Returns:
            list of SecurityPermissionResponse: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/tspublic/rest/v2/security/permission/tsobject/search')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body)
                        .is_required(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SecurityPermissionResponse.from_dictionary)
            .local_error('500', 'Operation failed', ErrorResponseException)
        ).execute()

    def restapi_v_2__search_permission_for_principals(self,
                                                      body):
        """Does a POST request to /tspublic/rest/v2/security/permission/principal/search.

        To list the permissions for user and user groups on a list of objects,
        use this endpoint. The response will include only those users and
        groups with have either VIEW OR MODIFY permission. 
        You can either provide list of object ids or type of objects to list
        the permissions for. One of these inputs is mandatory. If both are
        provided then only object ids will be considred. 
        You can optionally provide users or user groups for which the
        persmission needs to be displayed. 
        You can optionally see the permission on the dependent objects as well
        by enabling includeDependent field. 
        Requires administration privilege

        Args:
            body (TspublicRestV2SecurityPermissionPrincipalSearchRequest):
                TODO: type description here.

        Returns:
            list of PrincipalSearchResponse: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/tspublic/rest/v2/security/permission/principal/search')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body)
                        .is_required(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(PrincipalSearchResponse.from_dictionary)
            .local_error('500', 'Operation failed', ErrorResponseException)
        ).execute()
