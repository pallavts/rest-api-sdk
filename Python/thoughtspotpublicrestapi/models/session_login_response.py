# -*- coding: utf-8 -*-

"""
thoughtspotpublicrestapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from thoughtspotpublicrestapi.api_helper import APIHelper


class SessionLoginResponse(object):

    """Implementation of the 'SessionLoginResponse' model.

    Login response

    Attributes:
        user_name (string): Username of the user account for which token is
            generated
        token (string): Bearer token generated. This will be blank when token
            type is Cookie
        token_created_time (string): Date and time at which the token is
            generated
        token_expiry_duration (string): Duration in seconds after which the
            token expires
        token_type (string): Type of token generated

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "user_name": 'userName',
        "token": 'token',
        "token_created_time": 'tokenCreatedTime',
        "token_expiry_duration": 'tokenExpiryDuration',
        "token_type": 'tokenType'
    }

    _optionals = [
        'user_name',
        'token',
        'token_created_time',
        'token_expiry_duration',
        'token_type',
    ]

    def __init__(self,
                 user_name=APIHelper.SKIP,
                 token=APIHelper.SKIP,
                 token_created_time=APIHelper.SKIP,
                 token_expiry_duration=APIHelper.SKIP,
                 token_type=APIHelper.SKIP):
        """Constructor for the SessionLoginResponse class"""

        # Initialize members of the class
        if user_name is not APIHelper.SKIP:
            self.user_name = user_name 
        if token is not APIHelper.SKIP:
            self.token = token 
        if token_created_time is not APIHelper.SKIP:
            self.token_created_time = token_created_time 
        if token_expiry_duration is not APIHelper.SKIP:
            self.token_expiry_duration = token_expiry_duration 
        if token_type is not APIHelper.SKIP:
            self.token_type = token_type 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        user_name = dictionary.get("userName") if dictionary.get("userName") else APIHelper.SKIP
        token = dictionary.get("token") if dictionary.get("token") else APIHelper.SKIP
        token_created_time = dictionary.get("tokenCreatedTime") if dictionary.get("tokenCreatedTime") else APIHelper.SKIP
        token_expiry_duration = dictionary.get("tokenExpiryDuration") if dictionary.get("tokenExpiryDuration") else APIHelper.SKIP
        token_type = dictionary.get("tokenType") if dictionary.get("tokenType") else APIHelper.SKIP
        # Return an object of this model
        return cls(user_name,
                   token,
                   token_created_time,
                   token_expiry_duration,
                   token_type)
