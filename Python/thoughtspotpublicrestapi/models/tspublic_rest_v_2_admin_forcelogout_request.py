# -*- coding: utf-8 -*-

"""
thoughtspotpublicrestapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from thoughtspotpublicrestapi.api_helper import APIHelper
from thoughtspotpublicrestapi.models.name_and_id_input import NameAndIdInput


class TspublicRestV2AdminForcelogoutRequest(object):

    """Implementation of the 'Tspublic Rest V2 Admin Forcelogout Request' model.

    TODO: type model description here.

    Attributes:
        user (list of NameAndIdInput): A JSON array of name of users or GUIDs
            of groups or both. When both are given then id is considered.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "user": 'user'
    }

    _optionals = [
        'user',
    ]

    def __init__(self,
                 user=APIHelper.SKIP):
        """Constructor for the TspublicRestV2AdminForcelogoutRequest class"""

        # Initialize members of the class
        if user is not APIHelper.SKIP:
            self.user = user 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        user = None
        if dictionary.get('user') is not None:
            user = [NameAndIdInput.from_dictionary(x) for x in dictionary.get('user')]
        else:
            user = APIHelper.SKIP
        # Return an object of this model
        return cls(user)
