# -*- coding: utf-8 -*-

"""
thoughtspotpublicrestapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from thoughtspotpublicrestapi.api_helper import APIHelper


class VizType(object):

    """Implementation of the 'VizType' model.

    TODO: type model description here.

    Attributes:
        name (string): The name of the visualization
        id (string): The GUID of the visualization
        query_sql (string): SQL query associated with the visualization

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "name": 'name',
        "id": 'id',
        "query_sql": 'querySql'
    }

    _optionals = [
        'name',
        'id',
        'query_sql',
    ]

    def __init__(self,
                 name=APIHelper.SKIP,
                 id=APIHelper.SKIP,
                 query_sql=APIHelper.SKIP):
        """Constructor for the VizType class"""

        # Initialize members of the class
        if name is not APIHelper.SKIP:
            self.name = name 
        if id is not APIHelper.SKIP:
            self.id = id 
        if query_sql is not APIHelper.SKIP:
            self.query_sql = query_sql 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        name = dictionary.get("name") if dictionary.get("name") else APIHelper.SKIP
        id = dictionary.get("id") if dictionary.get("id") else APIHelper.SKIP
        query_sql = dictionary.get("querySql") if dictionary.get("querySql") else APIHelper.SKIP
        # Return an object of this model
        return cls(name,
                   id,
                   query_sql)
