/*
 * TSPublicRestAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package localhost.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for UserProperties type.
 */
public class UserProperties {
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private String persona;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private String mail;

    /**
     * Default constructor.
     */
    public UserProperties() {
    }

    /**
     * Initialization constructor.
     * @param  persona  String value for persona.
     * @param  mail  String value for mail.
     */
    public UserProperties(
            String persona,
            String mail) {
        this.persona = persona;
        this.mail = mail;
    }

    /**
     * Getter for Persona.
     * Persona of the user account
     * @return Returns the String
     */
    @JsonGetter("persona")
    public String getPersona() {
        return persona;
    }

    /**
     * Setter for Persona.
     * Persona of the user account
     * @param persona Value for String
     */
    @JsonSetter("persona")
    public void setPersona(String persona) {
        this.persona = persona;
    }

    /**
     * Getter for Mail.
     * Email of the user account
     * @return Returns the String
     */
    @JsonGetter("mail")
    public String getMail() {
        return mail;
    }

    /**
     * Setter for Mail.
     * Email of the user account
     * @param mail Value for String
     */
    @JsonSetter("mail")
    public void setMail(String mail) {
        this.mail = mail;
    }

    /**
     * Converts this UserProperties into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "UserProperties [" + "persona=" + persona + ", mail=" + mail + "]";
    }

    /**
     * Builds a new {@link UserProperties.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link UserProperties.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .persona(getPersona())
                .mail(getMail());
        return builder;
    }

    /**
     * Class to build instances of {@link UserProperties}.
     */
    public static class Builder {
        private String persona;
        private String mail;



        /**
         * Setter for persona.
         * @param  persona  String value for persona.
         * @return Builder
         */
        public Builder persona(String persona) {
            this.persona = persona;
            return this;
        }

        /**
         * Setter for mail.
         * @param  mail  String value for mail.
         * @return Builder
         */
        public Builder mail(String mail) {
            this.mail = mail;
            return this;
        }

        /**
         * Builds a new {@link UserProperties} object using the set fields.
         * @return {@link UserProperties}
         */
        public UserProperties build() {
            return new UserProperties(persona, mail);
        }
    }
}
