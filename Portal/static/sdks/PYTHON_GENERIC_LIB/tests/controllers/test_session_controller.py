# -*- coding: utf-8 -*-

"""
tspublicrestapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json
import dateutil.parser

from tests.controllers.controller_test_base import ControllerTestBase
from tests.test_helper import TestHelper
from tests.http_response_catcher import HttpResponseCatcher
from tspublicrestapi.api_helper import APIHelper
from tspublicrestapi.controllers.session_controller import SessionController
from tspublicrestapi.models.api_rest_v_2_session_login_request import ApiRestV2SessionLoginRequest


class SessionControllerTests(ControllerTestBase):

    @classmethod
    def setUpClass(cls):
        super(SessionControllerTests, cls).setUpClass()
        cls.response_catcher = HttpResponseCatcher()
        cls.controller = SessionController(cls.config, cls.response_catcher)

    # Get Session object information
    def test_session_info(self):

        # Perform the API call through the SDK function
        result = self.controller.session_info()

        # Test response code
        self.assertEquals(self.response_catcher.response.status_code, 200)

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        self.assertTrue(TestHelper.match_headers(expected_headers, self.response_catcher.response.headers))


    # You can programmatically login a user to ThoughtSpot
    def test_login(self):
        # Parameters for the API call
        body = None

        # Perform the API call through the SDK function
        result = self.controller.login(body)

        # Test response code
        self.assertEquals(self.response_catcher.response.status_code, 200)

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        self.assertTrue(TestHelper.match_headers(expected_headers, self.response_catcher.response.headers))


    # To log a user out of the current session, use this endpoint
    def test_logout(self):

        # Perform the API call through the SDK function
        result = self.controller.logout()

        # Test response code
        self.assertEquals(self.response_catcher.response.status_code, 200)

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        self.assertTrue(TestHelper.match_headers(expected_headers, self.response_catcher.response.headers))


