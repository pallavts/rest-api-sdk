/*
 * TSPublicRestAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package localhost.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for ApiRestV2UserSearchRequest type.
 */
public class ApiRestV2UserSearchRequest {
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private String name;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private String id;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private String displayName;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private Visibility2Enum visibility;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private String mail;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private List<String> groupNames;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private List<PrivilegeEnum> privileges;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private State2Enum state;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private NotifyOnShareEnum notifyOnShare;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private ShowWalkMeEnum showWalkMe;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private AnalystOnboardingCompleteEnum analystOnboardingComplete;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private TypeEnum type;

    /**
     * Default constructor.
     */
    public ApiRestV2UserSearchRequest() {
        visibility = Visibility2Enum.DEFAULT;
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  id  String value for id.
     * @param  displayName  String value for displayName.
     * @param  visibility  Visibility2Enum value for visibility.
     * @param  mail  String value for mail.
     * @param  groupNames  List of String value for groupNames.
     * @param  privileges  List of PrivilegeEnum value for privileges.
     * @param  state  State2Enum value for state.
     * @param  notifyOnShare  NotifyOnShareEnum value for notifyOnShare.
     * @param  showWalkMe  ShowWalkMeEnum value for showWalkMe.
     * @param  analystOnboardingComplete  AnalystOnboardingCompleteEnum value for
     *         analystOnboardingComplete.
     * @param  type  TypeEnum value for type.
     */
    public ApiRestV2UserSearchRequest(
            String name,
            String id,
            String displayName,
            Visibility2Enum visibility,
            String mail,
            List<String> groupNames,
            List<PrivilegeEnum> privileges,
            State2Enum state,
            NotifyOnShareEnum notifyOnShare,
            ShowWalkMeEnum showWalkMe,
            AnalystOnboardingCompleteEnum analystOnboardingComplete,
            TypeEnum type) {
        this.name = name;
        this.id = id;
        this.displayName = displayName;
        this.visibility = visibility;
        this.mail = mail;
        this.groupNames = groupNames;
        this.privileges = privileges;
        this.state = state;
        this.notifyOnShare = notifyOnShare;
        this.showWalkMe = showWalkMe;
        this.analystOnboardingComplete = analystOnboardingComplete;
        this.type = type;
    }

    /**
     * Getter for Name.
     * Name of the user.
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * Name of the user.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Id.
     * The GUID of the user account to query
     * @return Returns the String
     */
    @JsonGetter("id")
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * The GUID of the user account to query
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for DisplayName.
     * A unique display name string for the user, usually their first and last name.
     * @return Returns the String
     */
    @JsonGetter("displayName")
    public String getDisplayName() {
        return displayName;
    }

    /**
     * Setter for DisplayName.
     * A unique display name string for the user, usually their first and last name.
     * @param displayName Value for String
     */
    @JsonSetter("displayName")
    public void setDisplayName(String displayName) {
        this.displayName = displayName;
    }

    /**
     * Getter for Visibility.
     * Visibility of the user. The visibility attribute is set to DEFAULT when creating a user. The
     * DEFAULT attribute makes a user visible to other users and user groups, and thus allows them
     * to share objects.
     * @return Returns the Visibility2Enum
     */
    @JsonGetter("visibility")
    public Visibility2Enum getVisibility() {
        return visibility;
    }

    /**
     * Setter for Visibility.
     * Visibility of the user. The visibility attribute is set to DEFAULT when creating a user. The
     * DEFAULT attribute makes a user visible to other users and user groups, and thus allows them
     * to share objects.
     * @param visibility Value for Visibility2Enum
     */
    @JsonSetter("visibility")
    public void setVisibility(Visibility2Enum visibility) {
        this.visibility = visibility;
    }

    /**
     * Getter for Mail.
     * email of the user account
     * @return Returns the String
     */
    @JsonGetter("mail")
    public String getMail() {
        return mail;
    }

    /**
     * Setter for Mail.
     * email of the user account
     * @param mail Value for String
     */
    @JsonSetter("mail")
    public void setMail(String mail) {
        this.mail = mail;
    }

    /**
     * Getter for GroupNames.
     * A JSON array of group names
     * @return Returns the List of String
     */
    @JsonGetter("groupNames")
    public List<String> getGroupNames() {
        return groupNames;
    }

    /**
     * Setter for GroupNames.
     * A JSON array of group names
     * @param groupNames Value for List of String
     */
    @JsonSetter("groupNames")
    public void setGroupNames(List<String> groupNames) {
        this.groupNames = groupNames;
    }

    /**
     * Getter for Privileges.
     * A JSON array of privileges assigned to the user
     * @return Returns the List of PrivilegeEnum
     */
    @JsonGetter("privileges")
    public List<PrivilegeEnum> getPrivileges() {
        return privileges;
    }

    /**
     * Setter for Privileges.
     * A JSON array of privileges assigned to the user
     * @param privileges Value for List of PrivilegeEnum
     */
    @JsonSetter("privileges")
    public void setPrivileges(List<PrivilegeEnum> privileges) {
        this.privileges = privileges;
    }

    /**
     * Getter for State.
     * Status of user account. acitve or inactive.
     * @return Returns the State2Enum
     */
    @JsonGetter("state")
    public State2Enum getState() {
        return state;
    }

    /**
     * Setter for State.
     * Status of user account. acitve or inactive.
     * @param state Value for State2Enum
     */
    @JsonSetter("state")
    public void setState(State2Enum state) {
        this.state = state;
    }

    /**
     * Getter for NotifyOnShare.
     * User preference for receiving email notifications when another ThoughtSpot user shares
     * answers or pinboards.
     * @return Returns the NotifyOnShareEnum
     */
    @JsonGetter("notifyOnShare")
    public NotifyOnShareEnum getNotifyOnShare() {
        return notifyOnShare;
    }

    /**
     * Setter for NotifyOnShare.
     * User preference for receiving email notifications when another ThoughtSpot user shares
     * answers or pinboards.
     * @param notifyOnShare Value for NotifyOnShareEnum
     */
    @JsonSetter("notifyOnShare")
    public void setNotifyOnShare(NotifyOnShareEnum notifyOnShare) {
        this.notifyOnShare = notifyOnShare;
    }

    /**
     * Getter for ShowWalkMe.
     * The user preference for revisiting the onboarding experience.
     * @return Returns the ShowWalkMeEnum
     */
    @JsonGetter("showWalkMe")
    public ShowWalkMeEnum getShowWalkMe() {
        return showWalkMe;
    }

    /**
     * Setter for ShowWalkMe.
     * The user preference for revisiting the onboarding experience.
     * @param showWalkMe Value for ShowWalkMeEnum
     */
    @JsonSetter("showWalkMe")
    public void setShowWalkMe(ShowWalkMeEnum showWalkMe) {
        this.showWalkMe = showWalkMe;
    }

    /**
     * Getter for AnalystOnboardingComplete.
     * ThoughtSpot provides an interactive guided walkthrough to onboard new users. The onboarding
     * experience leads users through a set of actions to help users get started and accomplish
     * their tasks quickly. The users can turn off the Onboarding experience and access it again
     * when they need assistance with the ThoughtSpot UI.
     * @return Returns the AnalystOnboardingCompleteEnum
     */
    @JsonGetter("analystOnboardingComplete")
    public AnalystOnboardingCompleteEnum getAnalystOnboardingComplete() {
        return analystOnboardingComplete;
    }

    /**
     * Setter for AnalystOnboardingComplete.
     * ThoughtSpot provides an interactive guided walkthrough to onboard new users. The onboarding
     * experience leads users through a set of actions to help users get started and accomplish
     * their tasks quickly. The users can turn off the Onboarding experience and access it again
     * when they need assistance with the ThoughtSpot UI.
     * @param analystOnboardingComplete Value for AnalystOnboardingCompleteEnum
     */
    @JsonSetter("analystOnboardingComplete")
    public void setAnalystOnboardingComplete(AnalystOnboardingCompleteEnum analystOnboardingComplete) {
        this.analystOnboardingComplete = analystOnboardingComplete;
    }

    /**
     * Getter for Type.
     * Type of user. LOCAL_USER indicates that the user is created locally in the ThoughtSpot
     * system.
     * @return Returns the TypeEnum
     */
    @JsonGetter("type")
    public TypeEnum getType() {
        return type;
    }

    /**
     * Setter for Type.
     * Type of user. LOCAL_USER indicates that the user is created locally in the ThoughtSpot
     * system.
     * @param type Value for TypeEnum
     */
    @JsonSetter("type")
    public void setType(TypeEnum type) {
        this.type = type;
    }

    /**
     * Converts this ApiRestV2UserSearchRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ApiRestV2UserSearchRequest [" + "name=" + name + ", id=" + id + ", displayName="
                + displayName + ", visibility=" + visibility + ", mail=" + mail + ", groupNames="
                + groupNames + ", privileges=" + privileges + ", state=" + state
                + ", notifyOnShare=" + notifyOnShare + ", showWalkMe=" + showWalkMe
                + ", analystOnboardingComplete=" + analystOnboardingComplete + ", type=" + type
                + "]";
    }

    /**
     * Builds a new {@link ApiRestV2UserSearchRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ApiRestV2UserSearchRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .name(getName())
                .id(getId())
                .displayName(getDisplayName())
                .visibility(getVisibility())
                .mail(getMail())
                .groupNames(getGroupNames())
                .privileges(getPrivileges())
                .state(getState())
                .notifyOnShare(getNotifyOnShare())
                .showWalkMe(getShowWalkMe())
                .analystOnboardingComplete(getAnalystOnboardingComplete())
                .type(getType());
        return builder;
    }

    /**
     * Class to build instances of {@link ApiRestV2UserSearchRequest}.
     */
    public static class Builder {
        private String name;
        private String id;
        private String displayName;
        private Visibility2Enum visibility = Visibility2Enum.DEFAULT;
        private String mail;
        private List<String> groupNames;
        private List<PrivilegeEnum> privileges;
        private State2Enum state;
        private NotifyOnShareEnum notifyOnShare;
        private ShowWalkMeEnum showWalkMe;
        private AnalystOnboardingCompleteEnum analystOnboardingComplete;
        private TypeEnum type;



        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for displayName.
         * @param  displayName  String value for displayName.
         * @return Builder
         */
        public Builder displayName(String displayName) {
            this.displayName = displayName;
            return this;
        }

        /**
         * Setter for visibility.
         * @param  visibility  Visibility2Enum value for visibility.
         * @return Builder
         */
        public Builder visibility(Visibility2Enum visibility) {
            this.visibility = visibility;
            return this;
        }

        /**
         * Setter for mail.
         * @param  mail  String value for mail.
         * @return Builder
         */
        public Builder mail(String mail) {
            this.mail = mail;
            return this;
        }

        /**
         * Setter for groupNames.
         * @param  groupNames  List of String value for groupNames.
         * @return Builder
         */
        public Builder groupNames(List<String> groupNames) {
            this.groupNames = groupNames;
            return this;
        }

        /**
         * Setter for privileges.
         * @param  privileges  List of PrivilegeEnum value for privileges.
         * @return Builder
         */
        public Builder privileges(List<PrivilegeEnum> privileges) {
            this.privileges = privileges;
            return this;
        }

        /**
         * Setter for state.
         * @param  state  State2Enum value for state.
         * @return Builder
         */
        public Builder state(State2Enum state) {
            this.state = state;
            return this;
        }

        /**
         * Setter for notifyOnShare.
         * @param  notifyOnShare  NotifyOnShareEnum value for notifyOnShare.
         * @return Builder
         */
        public Builder notifyOnShare(NotifyOnShareEnum notifyOnShare) {
            this.notifyOnShare = notifyOnShare;
            return this;
        }

        /**
         * Setter for showWalkMe.
         * @param  showWalkMe  ShowWalkMeEnum value for showWalkMe.
         * @return Builder
         */
        public Builder showWalkMe(ShowWalkMeEnum showWalkMe) {
            this.showWalkMe = showWalkMe;
            return this;
        }

        /**
         * Setter for analystOnboardingComplete.
         * @param  analystOnboardingComplete  AnalystOnboardingCompleteEnum value for
         *         analystOnboardingComplete.
         * @return Builder
         */
        public Builder analystOnboardingComplete(
                AnalystOnboardingCompleteEnum analystOnboardingComplete) {
            this.analystOnboardingComplete = analystOnboardingComplete;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  TypeEnum value for type.
         * @return Builder
         */
        public Builder type(TypeEnum type) {
            this.type = type;
            return this;
        }

        /**
         * Builds a new {@link ApiRestV2UserSearchRequest} object using the set fields.
         * @return {@link ApiRestV2UserSearchRequest}
         */
        public ApiRestV2UserSearchRequest build() {
            return new ApiRestV2UserSearchRequest(name, id, displayName, visibility, mail,
                    groupNames, privileges, state, notifyOnShare, showWalkMe,
                    analystOnboardingComplete, type);
        }
    }
}
